{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to TDengine Cases Docs","text":"<p>You can switch branches on this page. For more information about how to run cases, see README.</p> <p>Case list can be found on the top bar case list docs.</p> <p>For more information about how to write new case docstring format, see Test Case Specification</p>"},{"location":"case_list_docs/01-DataTypes/","title":"01 DataTypes","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bigint","title":"<code>01-DataTypes.test_column_bigint</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bigint.TestBigIntColumn","title":"<code>TestBigIntColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bigint.TestBigIntColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 bigint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Bigint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bigint.TestBigIntColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 bigint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Bigint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bigint.TestBigIntColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 bigint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Bigint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bigint.TestBigIntColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 bigint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 bigint \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Bigint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bigint.TestBigIntColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 bigint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 bigint \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 bigint \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Bigint</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_bigint.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bool","title":"<code>01-DataTypes.test_column_bool</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bool.TestBoolColumn","title":"<code>TestBoolColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bool.TestBoolColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 bool \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Bool</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bool.TestBoolColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 bool \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Bool</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bool.TestBoolColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 bool \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Bool</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bool.TestBoolColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 bool \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 bool \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Bool</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_bool.TestBoolColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 bool \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 bool \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 bool \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Bool</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_bool.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_double","title":"<code>01-DataTypes.test_column_double</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_double.TestDoubleColumn","title":"<code>TestDoubleColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_double.TestDoubleColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 double \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Double</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_double.TestDoubleColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 double \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Double</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_double.TestDoubleColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 double \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Double</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_double.TestDoubleColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 double \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 double \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Double</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_double.TestDoubleColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 double \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 double \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 double \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Double</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_double.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_float","title":"<code>01-DataTypes.test_column_float</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_float.TestFloatColumn","title":"<code>TestFloatColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_float.TestFloatColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 float \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Float</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_float.TestFloatColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 float \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Float</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_float.TestFloatColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 float \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Float</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_float.TestFloatColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 float \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 float \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Float</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_float.TestFloatColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 float \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 float \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 float \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Float</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_float.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_geometry","title":"<code>01-DataTypes.test_column_geometry</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_geometry.TestGeometryColumn","title":"<code>TestGeometryColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_geometry.TestGeometryColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 geometry \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Geometry</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_geometry.TestGeometryColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 geometry \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Geometry</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_geometry.TestGeometryColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 geometry \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Geometry</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_geometry.TestGeometryColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 geometry \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 geometry \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Geometry</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_geometry.TestGeometryColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 geometry \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 geometry \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 geometry \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Geometry</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_geometry.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_int","title":"<code>01-DataTypes.test_column_int</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_int.TestIntColumn","title":"<code>TestIntColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_int.TestIntColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 int \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Int</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_int.TestIntColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 int \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Int</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_int.TestIntColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 int \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Int</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_int.TestIntColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 int \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 int \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Int</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_int.TestIntColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 int \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 int \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 int \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Int</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_int.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_json","title":"<code>01-DataTypes.test_column_json</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_json.TestJsonColumn","title":"<code>TestJsonColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_json.TestJsonColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 json \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Json</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_json.TestJsonColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 json \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Json</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_json.TestJsonColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 json \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Json</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_json.TestJsonColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 json \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 json \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Json</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_json.TestJsonColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 json \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 json \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 json \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Json</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_json.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_nchar","title":"<code>01-DataTypes.test_column_nchar</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_nchar.TestNcharColumn","title":"<code>TestNcharColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_nchar.TestNcharColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 nchar \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Nchar</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_nchar.TestNcharColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 nchar \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Nchar</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_nchar.TestNcharColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 nchar \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Nchar</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_nchar.TestNcharColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 nchar \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 nchar \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Nchar</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_nchar.TestNcharColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 nchar \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 nchar \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 nchar \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Nchar</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_nchar.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_smallint","title":"<code>01-DataTypes.test_column_smallint</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_smallint.TestSmallintColumn","title":"<code>TestSmallintColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_smallint.TestSmallintColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 smallint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Smallint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_smallint.TestSmallintColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 smallint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Smallint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_smallint.TestSmallintColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 smallint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Smallint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_smallint.TestSmallintColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 smallint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 smallint \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Smallint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_smallint.TestSmallintColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 smallint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 smallint \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 smallint \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Smallint</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_smallint.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_timestamp","title":"<code>01-DataTypes.test_column_timestamp</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_timestamp.TestTimestampColumn","title":"<code>TestTimestampColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_timestamp.TestTimestampColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 timestamp \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Timestamp</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_timestamp.TestTimestampColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 timestamp \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Timestamp</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_timestamp.TestTimestampColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 timestamp \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Timestamp</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_timestamp.TestTimestampColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 timestamp \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 timestamp \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Timestamp</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_timestamp.TestTimestampColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 timestamp \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 timestamp \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 timestamp \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Timestamp</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_timestamp.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_tinyint","title":"<code>01-DataTypes.test_column_tinyint</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_tinyint.TestTinyintColumn","title":"<code>TestTinyintColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_tinyint.TestTinyintColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 tinyint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Tinyint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_tinyint.TestTinyintColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 tinyint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Tinyint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_tinyint.TestTinyintColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 tinyint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Tinyint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_tinyint.TestTinyintColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 tinyint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 tinyint \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Tinyint</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_tinyint.TestTinyintColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 tinyint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 tinyint \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 tinyint \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Tinyint</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_tinyint.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_uint","title":"<code>01-DataTypes.test_column_uint</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_uint.TestUIntColumn","title":"<code>TestUIntColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_uint.TestUIntColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 uint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:UInt</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_uint.TestUIntColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 uint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:UInt</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_uint.TestUIntColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 uint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:UInt</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_uint.TestUIntColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 uint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 uint \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:UInt</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_uint.TestUIntColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 uint \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 uint \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 uint \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:UInt</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_uint.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_unsign","title":"<code>01-DataTypes.test_column_unsign</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_unsign.TestUnsignColumn","title":"<code>TestUnsignColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_unsign.TestUnsignColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 unsign \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 unsign \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 unsign \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Unsign</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_unsign.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varbinary","title":"<code>01-DataTypes.test_column_varbinary</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varbinary.TestVarbinaryColumn","title":"<code>TestVarbinaryColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varbinary.TestVarbinaryColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 varbinary \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Varbinary</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varbinary.TestVarbinaryColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 varbinary \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Varbinary</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varbinary.TestVarbinaryColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 varbinary \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Varbinary</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varbinary.TestVarbinaryColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 varbinary \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 varbinary \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Varbinary</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varbinary.TestVarbinaryColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 varbinary \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 varbinary \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 varbinary \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Varbinary</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_varbinary.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varchar","title":"<code>01-DataTypes.test_column_varchar</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varchar.TestVarcharColumn","title":"<code>TestVarcharColumn</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varchar.TestVarcharColumn.test_alter_tag_value","title":"<code>test_alter_tag_value()</code>","text":"<p>alter tag value</p> <ol> <li>\u4f7f\u7528 varchar \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u4fee\u6539\u5b50\u8868\u7684\u6807\u7b7e\u503c</li> </ol> Catalog <ul> <li>DataTypes:Varchar</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varchar.TestVarcharColumn.test_dynamic_create_table","title":"<code>test_dynamic_create_table()</code>","text":"<p>dynamic create table</p> <ol> <li>\u4f7f\u7528 varchar \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e\u5e76\u81ea\u52a8\u5efa\u8868</li> </ol> Catalog <ul> <li>DataTypes:Varchar</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varchar.TestVarcharColumn.test_illegal_input","title":"<code>test_illegal_input()</code>","text":"<p>illegal input</p> <ol> <li>\u4f7f\u7528 varchar \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u6807\u7b7e\u5217</li> <li>\u4f7f\u7528\u975e\u6cd5\u6807\u7b7e\u503c\u521b\u5efa\u5b50\u8868</li> </ol> Catalog <ul> <li>DataTypes:Varchar</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varchar.TestVarcharColumn.test_insert_column_value","title":"<code>test_insert_column_value()</code>","text":"<p>insert column value</p> <ol> <li>\u4f7f\u7528 varchar \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 varchar \u4f5c\u4e3a\u666e\u901a\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u5411\u5b50\u8868\u4e2d\u5199\u5165\u6570\u636e</li> </ol> Catalog <ul> <li>DataTypes:Varchar</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_column_varchar.TestVarcharColumn.test_static_create_table","title":"<code>test_static_create_table()</code>","text":"<p>static create table</p> <ol> <li>\u4f7f\u7528 varchar \u4f5c\u4e3a\u8d85\u7ea7\u8868\u7684\u666e\u901a\u5217\u3001\u6807\u7b7e\u5217</li> <li>\u5f53 varchar \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u4f7f\u7528\u5408\u6cd5\u503c\u3001\u975e\u6cd5\u503c\u521b\u5efa\u5b50\u8868</li> <li>\u5f53 varchar \u4f5c\u4e3a\u6807\u7b7e\u5217\u65f6\uff0c\u6d4b\u8bd5 show tags \u7684\u8fd4\u56de\u7ed3\u679c</li> </ol> Catalog <ul> <li>DataTypes:Varchar</li> <li>Tables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/parser/columnValue_varchar.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_const","title":"<code>01-DataTypes.test_const</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_const.TestConst","title":"<code>TestConst</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_const.TestConst.test_const","title":"<code>test_const()</code>","text":"<p>Const \u503c\u5904\u7406</p> <ol> <li>\u6267\u884c\u4ec5\u5305\u542b\u5e38\u91cf\u7684\u67e5\u8be2\u8bed\u53e5</li> </ol> Catalog <ul> <li>Function:Aggregate</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/query/const.sim</li> </ul>"},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_null","title":"<code>01-DataTypes.test_null</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_null.TestNull","title":"<code>TestNull</code>","text":""},{"location":"case_list_docs/01-DataTypes/#01-DataTypes.test_null.TestNull.test_null","title":"<code>test_null()</code>","text":"<p>Null \u503c\u5904\u7406</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e24\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e\uff0c\u5176\u4e2d\u90e8\u5206\u6570\u636e\u4e3a NULL \u503c</li> <li>\u5bf9\u5b50\u8868\u6267\u884c\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2</li> <li>\u4f7f\u7528 = NULL\u3001is NULL \u7b5b\u9009\u6761\u4ef6\u67e5\u8be2</li> <li>\u521b\u5efa\u666e\u901a\u8868\uff0c\u5305\u542b bool\u3001smallint\u3001tinyint\u3001int\u3001bigint\u3001float\u3001double\u3001binary \u7c7b\u578b\u7684\u666e\u901a\u6570\u636e\u5217</li> <li>\u5411\u8fd9\u4e9b\u6570\u636e\u7c7b\u4e2d\u5199\u5165 NULL \u503c</li> <li>\u8fdb\u884c\u6295\u5f71\u67e5\u8be2</li> </ol> Catalog <ul> <li>Function:Aggregate</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/null.sim</li> </ul>"},{"location":"case_list_docs/06-DataIngestion/","title":"06 DataIngestion","text":""},{"location":"case_list_docs/06-DataIngestion/#06-DataIngestion.test_multi_file_commit","title":"<code>06-DataIngestion.test_multi_file_commit</code>","text":""},{"location":"case_list_docs/06-DataIngestion/#06-DataIngestion.test_multi_file_commit.TestDataCommit","title":"<code>TestDataCommit</code>","text":""},{"location":"case_list_docs/06-DataIngestion/#06-DataIngestion.test_multi_file_commit.TestDataCommit.test_sub_table","title":"<code>test_sub_table()</code>","text":"<p>\u5b50\u8868\u521b\u5efa\u3001\u8bfb\u5199</p> <ol> <li>\u521b\u5efa\u5305\u542b 256 \u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa1\u4e2a\u5b50\u8868\uff0c\u5206\u522b\u5199\u5165\u8de8\u8d8a 50 \u4e2a\u6587\u4ef6\u4ee5\u4e0a\u7684\u6570\u636e</li> <li>\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2</li> <li>Kill -9 \u91cd\u542f\u540e\u518d\u6b21\u67e5\u8be2</li> </ol> Catalog <ul> <li>DataIngestion</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/column/commit.sim</li> </ul>"},{"location":"case_list_docs/06-DataIngestion/#06-DataIngestion.test_stable_values","title":"<code>06-DataIngestion.test_stable_values</code>","text":""},{"location":"case_list_docs/06-DataIngestion/#06-DataIngestion.test_stable_values.TestSubtableInsertRows","title":"<code>TestSubtableInsertRows</code>","text":""},{"location":"case_list_docs/06-DataIngestion/#06-DataIngestion.test_stable_values.TestSubtableInsertRows.test_subtable_insert_rows","title":"<code>test_subtable_insert_rows()</code>","text":"<p>\u4e00\u6761\u8bed\u53e5\u5199\u5165\u591a\u6761\u8bb0\u5f55</p> <ol> <li>\u5f85\u8865\u5145</li> </ol> Catalog <ul> <li>DataIngestion</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/values.sim</li> </ul>"},{"location":"case_list_docs/06-DataIngestion/#06-DataIngestion.test_stable_write_1","title":"<code>06-DataIngestion.test_stable_write_1</code>","text":""},{"location":"case_list_docs/06-DataIngestion/#06-DataIngestion.test_stable_write_1.TestStableWrite1","title":"<code>TestStableWrite1</code>","text":""},{"location":"case_list_docs/06-DataIngestion/#06-DataIngestion.test_stable_write_1.TestStableWrite1.test_stable_write_1","title":"<code>test_stable_write_1()</code>","text":"<p>write super table 1</p> <ol> <li>insert data</li> <li>query data</li> <li>kill -9 then restart</li> <li>insert data</li> <li>query data</li> </ol> Catalog <ul> <li>DataIngestion</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/disk.sim</li> </ul>"},{"location":"case_list_docs/08-TagIndices/","title":"08 TagIndices","text":""},{"location":"case_list_docs/08-TagIndices/#08-TagIndices.test_index_create_drop","title":"<code>08-TagIndices.test_index_create_drop</code>","text":""},{"location":"case_list_docs/08-TagIndices/#08-TagIndices.test_index_create_drop.TestIndexCreateDrop","title":"<code>TestIndexCreateDrop</code>","text":""},{"location":"case_list_docs/08-TagIndices/#08-TagIndices.test_index_create_drop.TestIndexCreateDrop.test_index_create_drop","title":"<code>test_index_create_drop()</code>","text":"<p>\u589e\u5220\u7d22\u5f15</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u5728\u67d0\u4e2a\u6807\u7b7e\u4e0a\u7d22\u5f15</li> <li>\u4f7f\u7528\u5e26\u6709\u7d22\u5f15\u7684\u6807\u7b7e\u67e5\u8be2</li> <li>\u5220\u9664\u5df2\u7ecf\u521b\u5efa\u7684\u7d22\u5f15</li> <li>\u4f7f\u7528\u521a\u88ab\u5220\u9664\u7d22\u5f15\u7684\u6807\u7b7e\u67e5\u8be2</li> </ol> Catalog <ul> <li>Index</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tagindex/add_index.sim</li> </ul>"},{"location":"case_list_docs/08-TagIndices/#08-TagIndices.test_index_overflow","title":"<code>08-TagIndices.test_index_overflow</code>","text":""},{"location":"case_list_docs/08-TagIndices/#08-TagIndices.test_index_overflow.TestIndexOverflow","title":"<code>TestIndexOverflow</code>","text":""},{"location":"case_list_docs/08-TagIndices/#08-TagIndices.test_index_overflow.TestIndexOverflow.test_index_overflow","title":"<code>test_index_overflow()</code>","text":"<p>\u7d22\u5f15\u8fb9\u754c</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u8ba9\u67d0\u4e2a\u6807\u7b7e\u7684\u53d6\u503c\u8303\u56f4\u8f83\u5927</li> <li>\u5728\u8be5\u6807\u7b7e\u4e0a\u521b\u5efa\u7d22\u5f15</li> <li>\u4f7f\u7528\u5e26\u6709\u7d22\u5f15\u7684\u6807\u7b7e\u67e5\u8be2</li> </ol> Catalog <ul> <li>Index</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tagindex/indexOverflow.sim</li> </ul>"},{"location":"case_list_docs/08-TagIndices/#08-TagIndices.test_index_perf","title":"<code>08-TagIndices.test_index_perf</code>","text":""},{"location":"case_list_docs/08-TagIndices/#08-TagIndices.test_index_perf.TestIndexPerf","title":"<code>TestIndexPerf</code>","text":""},{"location":"case_list_docs/08-TagIndices/#08-TagIndices.test_index_perf.TestIndexPerf.test_index_perf","title":"<code>test_index_perf()</code>","text":"<p>\u7d22\u5f15\u6027\u80fd</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5927\u91cf\u5b50\u8868\uff08\u672c\u4f8b\u4f7f\u7528 10 \u4e2a\uff0c\u4f46\u5e94\u4f7f\u7528 100000 \u4e2a\uff0c\u5f85\u9884\u5148\u51c6\u5907\u6570\u636e\u7684\u529f\u80fd\u5b8c\u6210\u540e\u8c03\u6574\u6b64\u6570\u76ee\uff09</li> <li>\u6bcf\u4e2a\u5b50\u8868\u5199\u5165\u4e00\u6761\u8bb0\u5f55</li> <li>\u521b\u5efa\u7d22\u5f15</li> <li>\u4f7f\u7528\u6807\u7b7e\u8fc7\u6ee4\u65b9\u5f0f\u67e5\u8be2\u6bcf\u4e2a\u5b50\u8868</li> </ol> Catalog <ul> <li>Index</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tagindex/perf.sim</li> </ul>"},{"location":"case_list_docs/19-ManageNodes/","title":"19 ManageNodes","text":""},{"location":"case_list_docs/19-ManageNodes/#19-ManageNodes.test_dnode_alter_debugflag","title":"<code>19-ManageNodes.test_dnode_alter_debugflag</code>","text":""},{"location":"case_list_docs/19-ManageNodes/#19-ManageNodes.test_dnode_alter_debugflag.TestDnodeAlterDebugFlag","title":"<code>TestDnodeAlterDebugFlag</code>","text":""},{"location":"case_list_docs/19-ManageNodes/#19-ManageNodes.test_dnode_alter_debugflag.TestDnodeAlterDebugFlag.test_dnode_alter_debugflag","title":"<code>test_dnode_alter_debugflag()</code>","text":"<p>\u5b50\u8868\u521b\u5efa\u3001\u8bfb\u5199</p> <ol> <li>\u4ec5\u542f\u52a8\u4e00\u4e2a dnode</li> <li>\u4fee\u6539\u5728\u7ebf dnode \u7684 monitor\u3001debugflag \u53c2\u6570</li> <li>\u4fee\u6539\u4e0d\u5728\u7ebf dnode \u53c2\u6570\uff08\u62a5\u9519\uff09</li> </ol> Catalog <ul> <li>Tables</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/alter/dnode.sim</li> </ul>"},{"location":"case_list_docs/22-Show/","title":"22 Show","text":""},{"location":"case_list_docs/22-Show/#22-Show.test_show_diskinfo","title":"<code>22-Show.test_show_diskinfo</code>","text":""},{"location":"case_list_docs/22-Show/#22-Show.test_show_diskinfo.TestShowDiskInfo","title":"<code>TestShowDiskInfo</code>","text":""},{"location":"case_list_docs/22-Show/#22-Show.test_show_diskinfo.TestShowDiskInfo.test_show_disk_info","title":"<code>test_show_disk_info()</code>","text":"<p>Show DiskInfo\u8bed\u53e5</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u6570\u636e\u5e93\u6267\u884c Flush \u64cd\u4f5c</li> <li>\u6267\u884c show disk_info \u8bed\u53e5</li> </ol> Catalog <ul> <li>Show</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/disk_usage.sim</li> </ul>"},{"location":"case_list_docs/22-Show/#22-Show.test_show_table_distributed","title":"<code>22-Show.test_show_table_distributed</code>","text":""},{"location":"case_list_docs/22-Show/#22-Show.test_show_table_distributed.TestShowTableDistributed","title":"<code>TestShowTableDistributed</code>","text":""},{"location":"case_list_docs/22-Show/#22-Show.test_show_table_distributed.TestShowTableDistributed.test_show_table_distributed","title":"<code>test_show_table_distributed()</code>","text":"<p>Show Table Distributed \u8bed\u53e5</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u6570\u636e\u5e93\u6267\u884c Flush \u64cd\u4f5c</li> <li>\u6267\u884c show table distributed \u8bed\u53e5</li> </ol> Catalog <ul> <li>Show</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/block_dist.sim</li> </ul>"},{"location":"case_list_docs/30-DataCompression/","title":"30 DataCompression","text":""},{"location":"case_list_docs/30-DataCompression/#30-DataCompression.test_compress_alter_option","title":"<code>30-DataCompression.test_compress_alter_option</code>","text":""},{"location":"case_list_docs/30-DataCompression/#30-DataCompression.test_compress_alter_option.TestCompressAlterOption","title":"<code>TestCompressAlterOption</code>","text":""},{"location":"case_list_docs/30-DataCompression/#30-DataCompression.test_compress_alter_option.TestCompressAlterOption.test_compress_alter_option","title":"<code>test_compress_alter_option()</code>","text":"<p>\u538b\u7f29\u53c2\u6570\u4fee\u6539</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b bool\u3001tinyint\u3001smallint\u3001int\u3001bigint\u3001float\u3001double\u3001binary \u6570\u636e\u7c7b\u578b\u7684\u666e\u901a\u8868</li> <li>\u4fee\u6539\u538b\u7f29\u53c2\u6570</li> <li>\u5199\u5165 2000 \u6761\u8bb0\u5f55</li> <li>kill -9 \u505c\u6b62 taosd</li> <li>\u68c0\u67e5\u5df2\u5199\u5165\u6570\u636e\u7684\u6761\u6570</li> <li>\u518d\u521b\u5efa\u53e6\u5916\u4e24\u4e2a\u6570\u636e\u5e93</li> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u4fee\u6539\u8d85\u7ea7\u8868\u7684\u538b\u7f29\u9009\u9879</li> </ol> Catalog <ul> <li>Compress</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compress/compress2.sim</li> </ul>"},{"location":"case_list_docs/30-DataCompression/#30-DataCompression.test_compress_disable","title":"<code>30-DataCompression.test_compress_disable</code>","text":""},{"location":"case_list_docs/30-DataCompression/#30-DataCompression.test_compress_disable.TestCompressAlterOption","title":"<code>TestCompressAlterOption</code>","text":""},{"location":"case_list_docs/30-DataCompression/#30-DataCompression.test_compress_disable.TestCompressAlterOption.test_compress_alter_option","title":"<code>test_compress_alter_option()</code>","text":"<p>\u538b\u7f29\u53c2\u6570\u4fee\u6539</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b bool\u3001tinyint\u3001smallint\u3001int\u3001bigint\u3001float\u3001double\u3001binary \u6570\u636e\u7c7b\u578b\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u3001\u5199\u5165\u8bb0\u5f55\u3001\u67e5\u8be2\u6570\u636e</li> <li>\u4fee\u6539\u8d85\u7ea7\u8868\u7684\u538b\u7f29\u65b9\u5f0f\u4e3a disable</li> <li>\u5199\u5165\u6570\u636e\u5e76\u67e5\u8be2</li> <li>\u521b\u5efa\u4e0d\u5e26\u538b\u7f29\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u3001\u5199\u5165\u8bb0\u5f55\u3001\u67e5\u8be2\u6570\u636e</li> </ol> Catalog <ul> <li>Compress</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compress/compressDisable.sim</li> </ul>"},{"location":"case_list_docs/30-DataCompression/#30-DataCompression.test_compress_normal_table","title":"<code>30-DataCompression.test_compress_normal_table</code>","text":""},{"location":"case_list_docs/30-DataCompression/#30-DataCompression.test_compress_normal_table.TestCompressNormalTable","title":"<code>TestCompressNormalTable</code>","text":""},{"location":"case_list_docs/30-DataCompression/#30-DataCompression.test_compress_normal_table.TestCompressNormalTable.test_compress_normal_table","title":"<code>test_compress_normal_table()</code>","text":"<p>\u7981\u7528\u538b\u7f29</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b bool\u3001tinyint\u3001smallint\u3001int\u3001bigint\u3001float\u3001double\u3001binary \u6570\u636e\u7c7b\u578b\u7684\u666e\u901a\u8868</li> <li>\u5199\u5165 2000 \u6761\u8bb0\u5f55</li> <li>\u518d\u521b\u5efa\u53e6\u5916\u4e24\u4e2a\u6570\u636e\u5e93</li> <li>\u5206\u522b\u5199\u5165\u4e0d\u540c\u7684 2000 \u6761\u8bb0\u5f55</li> <li>kill -9 \u505c\u6b62 taosd</li> <li>\u68c0\u67e5\u5df2\u5199\u5165\u6570\u636e\u7684\u6761\u6570</li> </ol> Catalog <ul> <li>Compress</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compress/compress.sim</li> </ul>"},{"location":"case_list_docs/31-Views/","title":"31 Views","text":""},{"location":"case_list_docs/31-Views/#31-Views.test_view_mgmt","title":"<code>31-Views.test_view_mgmt</code>","text":""},{"location":"case_list_docs/31-Views/#31-Views.test_view_mgmt.TestViewMgmt","title":"<code>TestViewMgmt</code>","text":""},{"location":"case_list_docs/31-Views/#31-Views.test_view_mgmt.TestViewMgmt.test_view_mgmt","title":"<code>test_view_mgmt()</code>","text":"<p>\u89c6\u56fe\u7ba1\u7406</p> <ol> <li>\u521b\u5efa\u4e09\u4e2a\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u6743\u9650\u6d4b\u8bd5</li> <li>\u521b\u5efa\u3001\u5220\u9664\u6d4b\u8bd5</li> <li>\u5199\u5165\u6d4b\u8bd5</li> <li>\u6d41\u8ba1\u7b97\u6d4b\u8bd5\uff08\u5f85\u6d41\u8ba1\u7b97\u91cd\u6784\u540e\u518d\u8fc1\u79fb\uff09</li> <li>Show/Desc \u6d4b\u8bd5</li> <li>\u540c\u540d\u8868\u6d4b\u8bd5</li> <li>\u91cd\u542f\u670d\u52a1\u7aef</li> <li>\u91cd\u590d\u4ee5\u4e0a\u6d4b\u8bd5</li> <li>\u4fee\u6539\u53c2\u6570 keepColumnName \u4e3a 1</li> <li>\u91cd\u590d\u4ee5\u4e0a\u6d4b\u8bd5</li> </ol> Catalog <ul> <li>View</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/view/view.sim</li> </ul>"},{"location":"case_list_docs/31-Views/#31-Views.test_view_nested_join","title":"<code>31-Views.test_view_nested_join</code>","text":""},{"location":"case_list_docs/31-Views/#31-Views.test_view_nested_join.TestViewNestedJoin","title":"<code>TestViewNestedJoin</code>","text":""},{"location":"case_list_docs/31-Views/#31-Views.test_view_nested_join.TestViewNestedJoin.test_view_nested_join","title":"<code>test_view_nested_join()</code>","text":"<p>\u5e26\u5d4c\u5957\u67e5\u8be2\u7684\u590d\u6742\u89c6\u56fe</p> <ol> <li>\u521b\u5efa\u666e\u901a\u8868\u3001\u5b50\u8868</li> <li>\u521b\u5efa\u5305\u542b\u5d4c\u5957\u67e5\u8be2\u7684\u590d\u6742\u89c6\u56fe</li> <li>\u67e5\u8be2\u89c6\u56fe</li> </ol> Catalog <ul> <li>View</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/query/nestedJoinView.sim</li> </ul>"},{"location":"case_list_docs/demo/","title":"Demo","text":""},{"location":"case_list_docs/demo/#demo.test_demo","title":"<code>demo.test_demo</code>","text":""},{"location":"case_list_docs/demo/#demo.test_demo.TestDemo","title":"<code>TestDemo</code>","text":""},{"location":"case_list_docs/demo/#demo.test_demo.TestDemo.test_demo","title":"<code>test_demo()</code>","text":"<p>\u6d4b\u8bd5demo</p> <p>\u5c55\u793a\u57fa\u672cjql\u64cd\u4f5c\u5199\u6cd5</p> <p>Since: v3.3.0.0</p> <p>Labels: demo</p> <p>Jira: None</p> History <ul> <li>2024-2-6 Feng Chao Created</li> <li>2025-3-10 Huo Hong Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/stream/","title":"Stream","text":""},{"location":"case_list_docs/stream/#stream.test_max_delay_interval","title":"<code>stream.test_max_delay_interval</code>","text":""},{"location":"case_list_docs/tmq/","title":"Tmq","text":""},{"location":"case_list_docs/tmq/#tmq.test_drop_lost_comsumers","title":"<code>tmq.test_drop_lost_comsumers</code>","text":""},{"location":"case_list_docs/tmq/#tmq.test_drop_lost_comsumers.TestDropLostConsumers","title":"<code>TestDropLostConsumers</code>","text":""},{"location":"case_list_docs/tmq/#tmq.test_drop_lost_comsumers.TestDropLostConsumers.test_case_max_poll_timeout","title":"<code>test_case_max_poll_timeout()</code>","text":"<p>session_timeout_ms \u548c max_poll_interval_ms \u5230\u671f\u540econsumer\u5173\u95ed</p> <p>session_timeout_ms \u548c max_poll_interval_ms \u5230\u671f\u540econsumer\u5173\u95ed</p> <p>Since: v3.3.0.0</p> <p>Labels: common,ci</p> <p>Jira: TD-12345,TS-1234</p> History <ul> <li>2024-2-6 Feng Chao Created</li> <li>2025-2-26 Huo Hong Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/tmq/#tmq.test_tmq_params","title":"<code>tmq.test_tmq_params</code>","text":""},{"location":"case_list_docs/tsim/","title":"Tsim","text":""},{"location":"case_list_docs/tsim/#tsim.test_tsim","title":"<code>tsim.test_tsim</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/","title":"01 Create","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_basic","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_basic</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_basic.TestNormalTableBasic2","title":"<code>TestNormalTableBasic2</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_basic.TestNormalTableBasic2.test_normal_table_basic2","title":"<code>test_normal_table_basic2()</code>","text":"<p>create normal table</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/basic2.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_bigint","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_bigint</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_bigint.TestNormalTableBigint","title":"<code>TestNormalTableBigint</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_bigint.TestNormalTableBigint.test_normal_table_bigint","title":"<code>test_normal_table_bigint()</code>","text":"<p>create normal table (bigint)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/bigint.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_binary","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_binary</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_binary.TestNormalTableBinary","title":"<code>TestNormalTableBinary</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_binary.TestNormalTableBinary.test_normal_table_binary","title":"<code>test_normal_table_binary()</code>","text":"<p>create normal table (binary)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/binary.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_bool","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_bool</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_bool.TestNormalTableBool","title":"<code>TestNormalTableBool</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_bool.TestNormalTableBool.test_normal_table_bool","title":"<code>test_normal_table_bool()</code>","text":"<p>create normal table (bool)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/bool.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_dbprefix","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_column_dbprefix</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_dbprefix.TestNormalTableColumnDbPrefix","title":"<code>TestNormalTableColumnDbPrefix</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_dbprefix.TestNormalTableColumnDbPrefix.test_normal_table_column_dbprefix","title":"<code>test_normal_table_column_dbprefix()</code>","text":"<p>create normal table (db.table)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/db.table.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_name","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_column_name</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_name.TestNormalTableColumnName","title":"<code>TestNormalTableColumnName</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_name.TestNormalTableColumnName.test_normal_table_column_name","title":"<code>test_normal_table_column_name()</code>","text":"<p>create normal table (name)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/column_name.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_num","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_column_num</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_num.TestNormalTableColumnNum","title":"<code>TestNormalTableColumnNum</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_num.TestNormalTableColumnNum.test_normal_table_column_num","title":"<code>test_normal_table_column_num()</code>","text":"<p>create normal table (num)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/column_num.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_type","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_column_type</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_type.TestNormalTableColumnType","title":"<code>TestNormalTableColumnType</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_type.TestNormalTableColumnType.test_normal_table_column_type","title":"<code>test_normal_table_column_type()</code>","text":"<p>create normal table (type)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/column_type.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_value","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_column_value</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_value.TestNormalTableColumnValue","title":"<code>TestNormalTableColumnValue</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_column_value.TestNormalTableColumnValue.test_normal_table_column_value","title":"<code>test_normal_table_column_value()</code>","text":"<p>create normal table (value)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/column_value.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_date","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_date</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_date.TestNormalTableDate","title":"<code>TestNormalTableDate</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_date.TestNormalTableDate.test_normal_table_date","title":"<code>test_normal_table_date()</code>","text":"<p>create normal table (database precision)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/date.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_double","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_double</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_double.TestNormalTableDouble","title":"<code>TestNormalTableDouble</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_double.TestNormalTableDouble.test_normal_table_double","title":"<code>test_normal_table_double()</code>","text":"<p>create normal table (double)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/double.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_float","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_float</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_float.TestNormalTableFloat","title":"<code>TestNormalTableFloat</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_float.TestNormalTableFloat.test_normal_table_float","title":"<code>test_normal_table_float()</code>","text":"<p>create normal table (float)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/float.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_int","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_int</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_int.TestNormalTableInt","title":"<code>TestNormalTableInt</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_int.TestNormalTableInt.test_normal_table_int","title":"<code>test_normal_table_int()</code>","text":"<p>create normal table (int)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/int.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_smallint","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_smallint</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_smallint.TestNormalTableSmallint","title":"<code>TestNormalTableSmallint</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_smallint.TestNormalTableSmallint.test_normal_table_smallint","title":"<code>test_normal_table_smallint()</code>","text":"<p>create normal table (smallint)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/smallint.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_tinyint","title":"<code>03-Tables.01-NormalTables.01-Create.test_normal_table_tinyint</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_tinyint.TestNormalTableTinyint","title":"<code>TestNormalTableTinyint</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/01-Create/#03-Tables.01-NormalTables.01-Create.test_normal_table_tinyint.TestNormalTableTinyint.test_normal_table_tinyint","title":"<code>test_normal_table_tinyint()</code>","text":"<p>create normal table (tinyint)</p> <ol> <li>create normal table</li> <li>insert data</li> <li>query from normal table</li> </ol> Catalog <ul> <li>Table:NormalTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/tinyint.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/","title":"03 Alter","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_1","title":"<code>03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_1</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_1.TestNormalTableAlter1","title":"<code>TestNormalTableAlter1</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_1.TestNormalTableAlter1.test_normal_table_alter_1","title":"<code>test_normal_table_alter_1()</code>","text":"<p>alter normal table 1</p> <ol> <li>add column</li> <li>drop column</li> <li>modify column</li> </ol> Catalog <ul> <li>Table:NormalTable:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/alter/table.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_2","title":"<code>03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_2</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_2.TestNormalTableAlter2","title":"<code>TestNormalTableAlter2</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_2.TestNormalTableAlter2.test_normal_table_alter_2","title":"<code>test_normal_table_alter_2()</code>","text":"<p>alter normal table 2</p> <ol> <li>add column</li> <li>insert data</li> <li>count new column</li> <li>kill -9 then restart</li> <li>drop column</li> <li>insert data</li> <li>count</li> </ol> Catalog <ul> <li>Table:NormalTable:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/alter_count.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_3","title":"<code>03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_3</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_3.TestNormalTableAlter3","title":"<code>TestNormalTableAlter3</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_3.TestNormalTableAlter3.test_normal_table_alter_3","title":"<code>test_normal_table_alter_3()</code>","text":"<p>alter normal table 3</p> <ol> <li>add column</li> <li>insert out-of-order data</li> <li>query data</li> </ol> Catalog <ul> <li>Table:NormalTable:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/alter_import.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_4","title":"<code>03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_4</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_4.TestNormalTableAlter4","title":"<code>TestNormalTableAlter4</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_4.TestNormalTableAlter4.test_normal_table_alter_4","title":"<code>test_normal_table_alter_4()</code>","text":"<p>alter normal table 4</p> <ol> <li>add column</li> <li>insert data</li> <li>project query</li> <li>loop for 7 times</li> <li>kill -9 then restart</li> </ol> Catalog <ul> <li>Table:NormalTable:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/alter_insert1.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_5","title":"<code>03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_5</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_5.TestNormalTableAlter5","title":"<code>TestNormalTableAlter5</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/03-Alter/#03-Tables.01-NormalTables.03-Alter.test_normal_table_alter_5.TestNormalTableAlter5.test_normal_table_alter_5","title":"<code>test_normal_table_alter_5()</code>","text":"<p>alter normal table 5</p> <ol> <li>drop column</li> <li>insert data</li> <li>project query</li> <li>loop for 7 times</li> <li>kill -9 then restart</li> </ol> Catalog <ul> <li>Table:NormalTable:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/alter_insert2.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/04-Query/","title":"04 Query","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/04-Query/#03-Tables.01-NormalTables.04-Query.test_normal_table_basic","title":"<code>03-Tables.01-NormalTables.04-Query.test_normal_table_basic</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/04-Query/#03-Tables.01-NormalTables.04-Query.test_normal_table_basic.TestNormalTableBasic","title":"<code>TestNormalTableBasic</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/04-Query/#03-Tables.01-NormalTables.04-Query.test_normal_table_basic.TestNormalTableBasic.test_normal_table_basic","title":"<code>test_normal_table_basic()</code>","text":"<p>create read write normal table</p> <ol> <li>create 256 column table</li> <li>insert</li> <li>project query</li> <li>filter query</li> <li>aggregate query</li> <li>Kill -9 then restart</li> </ol> Catalog <ul> <li>Table:NormalTable:Query</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/column/table.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/01-NormalTables/04-Query/#03-Tables.01-NormalTables.04-Query.test_normal_table_query","title":"<code>03-Tables.01-NormalTables.04-Query.test_normal_table_query</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/04-Query/#03-Tables.01-NormalTables.04-Query.test_normal_table_query.TestNormalTableQuery","title":"<code>TestNormalTableQuery</code>","text":""},{"location":"case_list_docs/03-Tables/01-NormalTables/04-Query/#03-Tables.01-NormalTables.04-Query.test_normal_table_query.TestNormalTableQuery.test_normal_table_query","title":"<code>test_normal_table_query()</code>","text":"<p>\u67e5\u8be2\u666e\u901a\u8868</p> <ol> <li>\u521b\u5efa\u666e\u901a\u8868</li> <li>\u5199\u5165\u6570\u636e</li> <li>\u6295\u5f71\u67e5\u8be2</li> <li>\u805a\u5408\u67e5\u8be2</li> <li>\u5b57\u6bb5\u7b5b\u9009</li> </ol> Catalog <ul> <li>Table:NormalTable:Query</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/single.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/02-SubTables/01-Create/","title":"01 Create","text":""},{"location":"case_list_docs/03-Tables/02-SubTables/01-Create/#03-Tables.02-SubTables.01-Create.test_sub_table_autocreate","title":"<code>03-Tables.02-SubTables.01-Create.test_sub_table_autocreate</code>","text":""},{"location":"case_list_docs/03-Tables/02-SubTables/01-Create/#03-Tables.02-SubTables.01-Create.test_sub_table_autocreate.TestSubTableAutoCreate","title":"<code>TestSubTableAutoCreate</code>","text":""},{"location":"case_list_docs/03-Tables/02-SubTables/01-Create/#03-Tables.02-SubTables.01-Create.test_sub_table_autocreate.TestSubTableAutoCreate.test_sub_table_auto_create","title":"<code>test_sub_table_auto_create()</code>","text":"<p>auto create subtable</p> <ol> <li>create stable</li> <li>auto create sub table</li> <li>query from stable</li> </ol> Catalog <ul> <li>Table:SubTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/autocreate.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/02-SubTables/01-Create/#03-Tables.02-SubTables.01-Create.test_sub_table_batchcreate","title":"<code>03-Tables.02-SubTables.01-Create.test_sub_table_batchcreate</code>","text":""},{"location":"case_list_docs/03-Tables/02-SubTables/01-Create/#03-Tables.02-SubTables.01-Create.test_sub_table_batchcreate.TestSubTableBatchCreate","title":"<code>TestSubTableBatchCreate</code>","text":""},{"location":"case_list_docs/03-Tables/02-SubTables/01-Create/#03-Tables.02-SubTables.01-Create.test_sub_table_batchcreate.TestSubTableBatchCreate.test_sub_table_batch_create","title":"<code>test_sub_table_batch_create()</code>","text":"<p>batch create subtable</p> <ol> <li>create stable</li> <li>batch create sub table</li> <li>query from stable</li> </ol> Catalog <ul> <li>Table:SubTable:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/basic1.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/02-SubTables/03-Alter/","title":"03 Alter","text":""},{"location":"case_list_docs/03-Tables/02-SubTables/03-Alter/#03-Tables.02-SubTables.03-Alter.test_sub_table_alter","title":"<code>03-Tables.02-SubTables.03-Alter.test_sub_table_alter</code>","text":""},{"location":"case_list_docs/03-Tables/02-SubTables/03-Alter/#03-Tables.02-SubTables.03-Alter.test_sub_table_alter.TestSubTableAlter","title":"<code>TestSubTableAlter</code>","text":""},{"location":"case_list_docs/03-Tables/02-SubTables/03-Alter/#03-Tables.02-SubTables.03-Alter.test_sub_table_alter.TestSubTableAlter.test_sub_table_alter","title":"<code>test_sub_table_alter()</code>","text":"<p>alter sub table</p> <ol> <li>add column</li> <li>insert data</li> <li>query data</li> <li>Kill -9 then restart</li> </ol> Catalog <ul> <li>Table:SubTable:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/alter/cached_schema_after_alter.sim</li> </ul>"},{"location":"case_list_docs/03-Tables/02-SubTables/04-Query/","title":"04 Query","text":""},{"location":"case_list_docs/03-Tables/02-SubTables/04-Query/#03-Tables.02-SubTables.04-Query.test_sub_table_basic","title":"<code>03-Tables.02-SubTables.04-Query.test_sub_table_basic</code>","text":""},{"location":"case_list_docs/03-Tables/02-SubTables/04-Query/#03-Tables.02-SubTables.04-Query.test_sub_table_basic.TestSubTableBasic","title":"<code>TestSubTableBasic</code>","text":""},{"location":"case_list_docs/03-Tables/02-SubTables/04-Query/#03-Tables.02-SubTables.04-Query.test_sub_table_basic.TestSubTableBasic.test_sub_table_basic","title":"<code>test_sub_table_basic()</code>","text":"<p>create read write sub table</p> <ol> <li>create table</li> <li>insert data</li> <li>project query</li> <li>filter</li> <li>aggregate query</li> <li>Kill -9 then restart</li> </ol> Catalog <ul> <li>Table:SubTable:Query</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/column/metrics.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/","title":"01 Alter","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_1","title":"<code>04-SuperTables.01-Alter.test_stable_alter_1</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_1.TestStableAlter1","title":"<code>TestStableAlter1</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_1.TestStableAlter1.test_stable_alter_1","title":"<code>test_stable_alter_1()</code>","text":"<p>alter super table 1</p> <ol> <li>add column</li> <li>drop column</li> <li>modify column</li> <li>rename column</li> <li>add tag</li> <li>drop tag</li> <li>modify tag</li> <li>rename tag</li> </ol> Catalog <ul> <li>SuperTables:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/alter_comment.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_2","title":"<code>04-SuperTables.01-Alter.test_stable_alter_2</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_2.TestSTableAlter2","title":"<code>TestSTableAlter2</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_2.TestSTableAlter2.test_stable_alter_2","title":"<code>test_stable_alter_2()</code>","text":"<p>alter super table 2</p> <ol> <li>insert out-of-order data</li> <li>add column</li> <li>describe sub table</li> <li>drop column</li> <li>describe sub table</li> <li>loop for 7 times</li> <li>kill -9 then restart</li> </ol> Catalog <ul> <li>SuperTables:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/alter_metrics.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_3","title":"<code>04-SuperTables.01-Alter.test_stable_alter_3</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_3.TestSTableAlter3","title":"<code>TestSTableAlter3</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_3.TestSTableAlter3.test_stable_alter_3","title":"<code>test_stable_alter_3()</code>","text":"<p>alter super table 3</p> <ol> <li>add column</li> <li>insert data</li> <li>project query</li> <li>loop for 7 times</li> </ol> Catalog <ul> <li>SuperTables:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/column_add.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_4","title":"<code>04-SuperTables.01-Alter.test_stable_alter_4</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_4.TestSTableAlter4","title":"<code>TestSTableAlter4</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_4.TestSTableAlter4.test_stable_alter_4","title":"<code>test_stable_alter_4()</code>","text":"<p>alter super table 4</p> <ol> <li>drop column</li> <li>insert data</li> <li>project query</li> <li>loop for 7 times</li> </ol> Catalog <ul> <li>SuperTables:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/column_drop.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_5","title":"<code>04-SuperTables.01-Alter.test_stable_alter_5</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_5.TestSTableAlter5","title":"<code>TestSTableAlter5</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_alter_5.TestSTableAlter5.test_stable_alter_5","title":"<code>test_stable_alter_5()</code>","text":"<p>alter super table 5</p> <ol> <li>modify column</li> <li>insert data</li> <li>project query</li> <li>kill -9 then restart</li> <li>project query</li> </ol> Catalog <ul> <li>SuperTables:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/column_modify.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_add","title":"<code>04-SuperTables.01-Alter.test_stable_tag_add</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_add.TestStableTagAdd","title":"<code>TestStableTagAdd</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_add.TestStableTagAdd.test_stable_tag_add","title":"<code>test_stable_tag_add()</code>","text":"<p>\u589e\u52a0\u6807\u7b7e\u5217</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u589e\u52a0\u6807\u7b7e\u5217\uff0c\u786e\u8ba4\u751f\u6548</li> <li>\u4f7f\u7528\u589e\u52a0\u7684\u6807\u7b7e\u503c\u8fdb\u884c\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-30 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/tag_add.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_drop","title":"<code>04-SuperTables.01-Alter.test_stable_tag_drop</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_drop.TestStableTagDrop","title":"<code>TestStableTagDrop</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_drop.TestStableTagDrop.test_stable_tag_drop","title":"<code>test_stable_tag_drop()</code>","text":"<p>\u5220\u9664\u6807\u7b7e\u5217</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5220\u9664\u6807\u7b7e\u5217\uff0c\u786e\u8ba4\u751f\u6548</li> <li>\u4f7f\u7528\u5220\u9664\u7684\u6807\u7b7e\u503c\u8fdb\u884c\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-30 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/tag_drop.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_modify","title":"<code>04-SuperTables.01-Alter.test_stable_tag_modify</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_modify.TestStableTagModify","title":"<code>TestStableTagModify</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_modify.TestStableTagModify.test_stable_tag_modify","title":"<code>test_stable_tag_modify()</code>","text":"<p>\u4fee\u6539\u6807\u7b7e\u5217</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u4fee\u6539\u6807\u7b7e\u5217\u5bbd\u5ea6\uff0c\u786e\u8ba4\u751f\u6548</li> <li>\u4f7f\u7528\u4fee\u6539\u540e\u7684\u6807\u7b7e\u503c\u8fdb\u884c\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-30 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/tag_modify.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_rename","title":"<code>04-SuperTables.01-Alter.test_stable_tag_rename</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_rename.TestStableTagRename","title":"<code>TestStableTagRename</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_stable_tag_rename.TestStableTagRename.test_stable_tag_rename","title":"<code>test_stable_tag_rename()</code>","text":"<p>\u91cd\u547d\u540d\u6807\u7b7e\u5217</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u91cd\u547d\u540d\u6807\u7b7e\u5217\uff0c\u786e\u8ba4\u751f\u6548</li> <li>\u4f7f\u7528\u91cd\u547d\u540d\u540e\u7684\u6807\u7b7e\u503c\u8fdb\u884c\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Alter</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-30 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/tag_rename.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_add","title":"<code>04-SuperTables.01-Alter.test_tag_add</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_add.TestTagAdd","title":"<code>TestTagAdd</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_add.TestTagAdd.test_tag_add","title":"<code>test_tag_add()</code>","text":"<p>\u589e\u52a0\u6807\u7b7e\u5217</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u589e\u52a0\u6807\u7b7e\u5217\uff0c\u786e\u8ba4\u751f\u6548</li> <li>\u4f7f\u7528\u589e\u52a0\u7684\u6807\u7b7e\u503c\u8fdb\u884c\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/add.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_change","title":"<code>04-SuperTables.01-Alter.test_tag_change</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_change.TestTagChange","title":"<code>TestTagChange</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_change.TestTagChange.test_tag_change","title":"<code>test_tag_change()</code>","text":"<p>\u4fee\u6539\u6807\u7b7e\u540d</p> <ol> <li>\u521b\u5efa\u5305\u542b bool\u3001int \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u4fee\u6539\u6807\u7b7e\u540d\uff0c\u786e\u8ba4\u751f\u6548</li> <li>\u4f7f\u7528\u4fee\u6539\u540e\u7684\u6807\u7b7e\u540d\u8fdb\u884c\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/change.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_commit","title":"<code>04-SuperTables.01-Alter.test_tag_commit</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_commit.TestTagDrop","title":"<code>TestTagDrop</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_commit.TestTagDrop.test_tag_drop","title":"<code>test_tag_drop()</code>","text":"<p>\u6807\u7b7e\u4fee\u6539\u5728\u91cd\u542f\u540e\u7ee7\u7eed\u751f\u6548</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u6807\u7b7e\u8fdb\u884c\u5404\u79cd\u64cd\u4f5c\u53ca\u67e5\u8be2</li> <li>\u4f7f\u7528 kill -9 \u65b9\u5f0f\u5f3a\u6740 taosd</li> <li>\u786e\u4fdd\u6807\u7b7e\u4fee\u6539\u88ab\u4fdd\u5b58\u5230\u6570\u636e\u5e93</li> <li>\u786e\u4fdd\u4e4b\u524d\u7684\u5404\u79cd\u67e5\u8be2\u90fd\u80fd\u6b63\u5e38\u8fdb\u884c</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/commit.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_create","title":"<code>04-SuperTables.01-Alter.test_tag_create</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_create.TestTagCreate","title":"<code>TestTagCreate</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_create.TestTagCreate.test_tag_create","title":"<code>test_tag_create()</code>","text":"<p>\u521b\u5efa\u6807\u7b7e\u5217</p> <ol> <li>\u521b\u5efa\u5305\u542b\u591a\u79cd\u6807\u7b7e\u7c7b\u578b\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u4f7f\u7528\u6807\u7b7e\u8fdb\u884c\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/create.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_drop","title":"<code>04-SuperTables.01-Alter.test_tag_drop</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_drop.TestTagDrop","title":"<code>TestTagDrop</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_drop.TestTagDrop.test_tag_drop","title":"<code>test_tag_drop()</code>","text":"<p>\u5220\u9664\u6807\u7b7e\u5217</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5220\u9664\u6807\u7b7e\u5217\uff0c\u786e\u8ba4\u751f\u6548</li> <li>\u4f7f\u7528\u5220\u9664\u540e\u7684\u6807\u7b7e\u8fdb\u884c\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/delete.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_drop_table","title":"<code>04-SuperTables.01-Alter.test_tag_drop_table</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_drop_table.TestTagDropTable","title":"<code>TestTagDropTable</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_drop_table.TestTagDropTable.test_tag_drop_table","title":"<code>test_tag_drop_table()</code>","text":"<p>\u5220\u9664\u5b50\u8868\u540e\u7684\u6807\u7b7e\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5220\u9664\u90e8\u5206\u5b50\u8868\uff0c\u786e\u8ba4\u751f\u6548</li> <li>\u4f7f\u7528\u6807\u7b7e\u8fdb\u884c\u67e5\u8be2\uff0c\u786e\u4fdd\u7ed3\u679c\u4e2d\u4e0d\u5305\u542b\u88ab\u5220\u9664\u7684\u5b50\u8868tests/script/tsim/tag/drop_tag.sim</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_set","title":"<code>04-SuperTables.01-Alter.test_tag_set</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_set.TestTagSet","title":"<code>TestTagSet</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_set.TestTagSet.test_tag_set","title":"<code>test_tag_set()</code>","text":"<p>\u4fee\u6539\u6807\u7b7e\u503c</p> <ol> <li>\u521b\u5efa\u5305\u542b bool\u3001int \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u4fee\u6539\u6807\u7b7e\u503c\uff0c\u786e\u8ba4\u751f\u6548</li> <li>\u4f7f\u7528\u4fee\u6539\u540e\u7684\u6807\u7b7e\u503c\u8fdb\u884c\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/set.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_set_multi","title":"<code>04-SuperTables.01-Alter.test_tag_set_multi</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_set_multi.TestTagChangeMulti","title":"<code>TestTagChangeMulti</code>","text":""},{"location":"case_list_docs/04-SuperTables/01-Alter/#04-SuperTables.01-Alter.test_tag_set_multi.TestTagChangeMulti.test_tag_change_multi","title":"<code>test_tag_change_multi()</code>","text":"<p>\u540c\u65f6\u4fee\u6539\u591a\u4e2a\u6807\u7b7e\u503c</p> <ol> <li>\u521b\u5efa\u5305\u542b\u591a\u4e2a\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u540c\u65f6\u4fee\u6539\u591a\u4e2a\u6807\u7b7e\u7684\u503c\uff0c\u786e\u8ba4\u751f\u6548</li> <li>\u4f7f\u7528\u4fee\u6539\u540e\u7684\u6807\u7b7e\u540d\u8fdb\u884c\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/change_multi_tag.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/02-Drop/","title":"02 Drop","text":""},{"location":"case_list_docs/04-SuperTables/02-Drop/#04-SuperTables.02-Drop.test_stable_drop_basic3","title":"<code>04-SuperTables.02-Drop.test_stable_drop_basic3</code>","text":""},{"location":"case_list_docs/04-SuperTables/02-Drop/#04-SuperTables.02-Drop.test_stable_drop_basic3.TestStableDropBasic3","title":"<code>TestStableDropBasic3</code>","text":""},{"location":"case_list_docs/04-SuperTables/02-Drop/#04-SuperTables.02-Drop.test_stable_drop_basic3.TestStableDropBasic3.test_stable_drop_basic3","title":"<code>test_stable_drop_basic3()</code>","text":"<p>drop stable</p> <ol> <li>create stable</li> <li>create sub table</li> <li>create normal table</li> <li>insert data</li> <li>drop stable</li> </ol> Catalog <ul> <li>SuperTable:Drop</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/table/basic3.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/","title":"03 Query","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_2","title":"<code>04-SuperTables.03-Query.test_column_2</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_2.TestColumn2","title":"<code>TestColumn2</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_2.TestColumn2.test_column_2","title":"<code>test_column_2()</code>","text":"<p>2 \u4e2a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 2 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 2 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/2.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_3","title":"<code>04-SuperTables.03-Query.test_column_3</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_3.TestColumn3","title":"<code>TestColumn3</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_3.TestColumn3.test_column_3","title":"<code>test_column_3()</code>","text":"<p>3 \u4e2a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 3 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 3 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/3.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_4","title":"<code>04-SuperTables.03-Query.test_column_4</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_4.TestColumn4","title":"<code>TestColumn4</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_4.TestColumn4.test_column_4","title":"<code>test_column_4()</code>","text":"<p>4 \u4e2a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 4 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 4 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/4.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_5","title":"<code>04-SuperTables.03-Query.test_column_5</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_5.TestColumn5","title":"<code>TestColumn5</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_5.TestColumn5.test_column_5","title":"<code>test_column_5()</code>","text":"<p>5 \u4e2a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 5 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 5 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/5.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_6","title":"<code>04-SuperTables.03-Query.test_column_6</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_6.TestColumn5","title":"<code>TestColumn5</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_6.TestColumn5.test_column_6","title":"<code>test_column_6()</code>","text":"<p>6 \u4e2a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 6 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 6 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/6.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_bigint","title":"<code>04-SuperTables.03-Query.test_column_bigint</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_bigint.TestColumnBigInt","title":"<code>TestColumnBigInt</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_bigint.TestColumnBigInt.test_column_bigint","title":"<code>test_column_bigint()</code>","text":"<p>BigInt \u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 1 \u4e2a BigInt \u7c7b\u578b\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a BigInt \u7c7b\u578b\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/bigint.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_binary","title":"<code>04-SuperTables.03-Query.test_column_binary</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_binary.TestColumnBinary","title":"<code>TestColumnBinary</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_binary.TestColumnBinary.test_column_binary","title":"<code>test_column_binary()</code>","text":"<p>Binary \u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 1 \u4e2a Binary \u7c7b\u578b\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a Binary \u7c7b\u578b\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/binary.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_bool","title":"<code>04-SuperTables.03-Query.test_column_bool</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_bool.TestColumnBool","title":"<code>TestColumnBool</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_bool.TestColumnBool.test_column_bool","title":"<code>test_column_bool()</code>","text":"<p>Bool \u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 1 \u4e2a Bool \u7c7b\u578b\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a Bool \u7c7b\u578b\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/bool.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_double","title":"<code>04-SuperTables.03-Query.test_column_double</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_double.TestColumnDouble","title":"<code>TestColumnDouble</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_double.TestColumnDouble.test_column_double","title":"<code>test_column_double()</code>","text":"<p>Double \u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 1 \u4e2a Double \u7c7b\u578b\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a Double \u7c7b\u578b\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/double.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_float","title":"<code>04-SuperTables.03-Query.test_column_float</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_float.TestColumnFloat","title":"<code>TestColumnFloat</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_float.TestColumnFloat.test_column_float","title":"<code>test_column_float()</code>","text":"<p>Float \u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 1 \u4e2a Float \u7c7b\u578b\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a Float \u7c7b\u578b\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/float.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_int","title":"<code>04-SuperTables.03-Query.test_column_int</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_int.TestColumnInt","title":"<code>TestColumnInt</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_int.TestColumnInt.test_column_int","title":"<code>test_column_int()</code>","text":"<p>Int \u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 1 \u4e2a Int \u7c7b\u578b\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a Int \u7c7b\u578b\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/int.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_smallint","title":"<code>04-SuperTables.03-Query.test_column_smallint</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_smallint.TestColumnSmallInt","title":"<code>TestColumnSmallInt</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_smallint.TestColumnSmallInt.test_column_smallint","title":"<code>test_column_smallint()</code>","text":"<p>SmallInt \u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 1 \u4e2a SmallInt \u7c7b\u578b\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a SmallInt \u7c7b\u578b\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/smallint.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_tinyint","title":"<code>04-SuperTables.03-Query.test_column_tinyint</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_tinyint.TestColumnTinyInt","title":"<code>TestColumnTinyInt</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_tinyint.TestColumnTinyInt.test_column_tinyint","title":"<code>test_column_tinyint()</code>","text":"<p>TinyInt \u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 1 \u4e2a TinyInt \u7c7b\u578b\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a TinyInt \u7c7b\u578b\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/tinyint.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_ubigint","title":"<code>04-SuperTables.03-Query.test_column_ubigint</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_ubigint.TestColumnUBigInt","title":"<code>TestColumnUBigInt</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_column_ubigint.TestColumnUBigInt.test_column_ubigint","title":"<code>test_column_ubigint()</code>","text":"<p>UBigInt \u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 1 \u4e2a UBigInt \u7c7b\u578b\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a UBigInt \u7c7b\u578b\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Columns</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/field/unsigined_bigint.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_stable_query_dnode3","title":"<code>04-SuperTables.03-Query.test_stable_query_dnode3</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_stable_query_dnode3.TestStableQuery1","title":"<code>TestStableQuery1</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_stable_query_dnode3.TestStableQuery1.test_stable_query_1","title":"<code>test_stable_query_1()</code>","text":"<p>\u8d85\u7ea7\u8868\u67e5\u8be2\uff083 dnode\uff09</p> <ol> <li>insert data</li> <li>query data</li> </ol> Catalog <ul> <li>SuperTables:Query</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/dnode3.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_stable_query_vnode3","title":"<code>04-SuperTables.03-Query.test_stable_query_vnode3</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_stable_query_vnode3.TestStableQueryVnode3","title":"<code>TestStableQueryVnode3</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_stable_query_vnode3.TestStableQueryVnode3.test_stable_query_vnode3","title":"<code>test_stable_query_vnode3()</code>","text":"<p>\u8d85\u7ea7\u8868\u67e5\u8be2\uff083 vnode\uff09</p> <ol> <li>\u5f85\u8865\u5145</li> </ol> Catalog <ul> <li>SuperTables:Query</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/vnode3.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_stable_tag_filter_2","title":"<code>04-SuperTables.03-Query.test_stable_tag_filter_2</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_stable_tag_filter_2.TestStableTagFilter2","title":"<code>TestStableTagFilter2</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_stable_tag_filter_2.TestStableTagFilter2.test_stable_tag_filter_2","title":"<code>test_stable_tag_filter_2()</code>","text":"<p>\u7b5b\u9009\u6807\u7b7e\u5217</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u7b5b\u9009\u6807\u7b7e\u5217\uff0c\u786e\u8ba4\u751f\u6548</li> </ol> Catalog <ul> <li>SuperTable:Query</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-30 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/tag_filter.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_3","title":"<code>04-SuperTables.03-Query.test_tag_3</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_3.TestTag3","title":"<code>TestTag3</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_3.TestTag3.test_tag_3","title":"<code>test_tag_3()</code>","text":"<p>3 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 3 \u4e2a\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/3.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_4","title":"<code>04-SuperTables.03-Query.test_tag_4</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_4.TestTag4","title":"<code>TestTag4</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_4.TestTag4.test_tag_4","title":"<code>test_tag_4()</code>","text":"<p>4 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b 4 \u4e2a\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/4.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_5","title":"<code>04-SuperTables.03-Query.test_tag_5</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_5.TestTag5","title":"<code>TestTag5</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_5.TestTag5.test_tag_5","title":"<code>test_tag_5()</code>","text":"<p>5 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b 5 \u4e2a\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/5.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_6","title":"<code>04-SuperTables.03-Query.test_tag_6</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_6.TestTag6","title":"<code>TestTag6</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_6.TestTag6.test_tag_6","title":"<code>test_tag_6()</code>","text":"<p>6 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b 6 \u4e2a\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/6.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bigint","title":"<code>04-SuperTables.03-Query.test_tag_bigint</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bigint.TestTagBigInt","title":"<code>TestTagBigInt</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bigint.TestTagBigInt.test_tag_bigint","title":"<code>test_tag_bigint()</code>","text":"<p>BigInt \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b BigInt \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/bigint.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_binary","title":"<code>04-SuperTables.03-Query.test_tag_binary</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_binary.TestTagBinary","title":"<code>TestTagBinary</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_binary.TestTagBinary.test_tag_binary","title":"<code>test_tag_binary()</code>","text":"<p>Binary \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b Binary \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/binary.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_binary_binary","title":"<code>04-SuperTables.03-Query.test_tag_binary_binary</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_binary_binary.TestTagBinaryBinary","title":"<code>TestTagBinaryBinary</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_binary_binary.TestTagBinaryBinary.test_tag_binary_binary","title":"<code>test_tag_binary_binary()</code>","text":"<p>\u4e24\u4e2a Bianry \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a Binary \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/binary_binary.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bool","title":"<code>04-SuperTables.03-Query.test_tag_bool</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bool.TestTagBool","title":"<code>TestTagBool</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bool.TestTagBool.test_tag_bool","title":"<code>test_tag_bool()</code>","text":"<p>Bool \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b Bool \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/bool.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bool_binary","title":"<code>04-SuperTables.03-Query.test_tag_bool_binary</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bool_binary.TestTagBoolBinary","title":"<code>TestTagBoolBinary</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bool_binary.TestTagBoolBinary.test_tag_bool_binary","title":"<code>test_tag_bool_binary()</code>","text":"<p>Bool \u548c Binary \u7c7b\u578b\u6807\u7b7e\u6df7\u5408\u4f7f\u7528\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b Bool\u3001Binary \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/bool_binary.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bool_int","title":"<code>04-SuperTables.03-Query.test_tag_bool_int</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bool_int.TestTagBoolInt","title":"<code>TestTagBoolInt</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_bool_int.TestTagBoolInt.test_tag_bool_int","title":"<code>test_tag_bool_int()</code>","text":"<p>Bool \u548c Int \u7c7b\u578b\u6807\u7b7e\u6df7\u5408\u4f7f\u7528\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b Bool\u3001Int \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/bool_int.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_column","title":"<code>04-SuperTables.03-Query.test_tag_column</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_column.TestTagColumn","title":"<code>TestTagColumn</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_column.TestTagColumn.test_tag_column","title":"<code>test_tag_column()</code>","text":"<p>2 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 2 \u4e2a\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/column.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_double","title":"<code>04-SuperTables.03-Query.test_tag_double</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_double.TestTagDouble","title":"<code>TestTagDouble</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_double.TestTagDouble.test_tag_double","title":"<code>test_tag_double()</code>","text":"<p>Double \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b Double \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/double.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_filter","title":"<code>04-SuperTables.03-Query.test_tag_filter</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_filter.TestTagFilter","title":"<code>TestTagFilter</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_filter.TestTagFilter.test_tag_filter","title":"<code>test_tag_filter()</code>","text":"<p>1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 1 \u4e2a\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/filter.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_float","title":"<code>04-SuperTables.03-Query.test_tag_float</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_float.TestTagFloat","title":"<code>TestTagFloat</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_float.TestTagFloat.test_tag_float","title":"<code>test_tag_float()</code>","text":"<p>Float \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b Float \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/float.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_int","title":"<code>04-SuperTables.03-Query.test_tag_int</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_int.TestTagInt","title":"<code>TestTagInt</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_int.TestTagInt.test_tag_int","title":"<code>test_tag_int()</code>","text":"<p>Int \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b Int \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/int.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_int_binary","title":"<code>04-SuperTables.03-Query.test_tag_int_binary</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_int_binary.TestTagIntBinary","title":"<code>TestTagIntBinary</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_int_binary.TestTagIntBinary.test_tag_int_binary","title":"<code>test_tag_int_binary()</code>","text":"<p>Int \u548c Binary \u7c7b\u578b\u6807\u7b7e\u6df7\u5408\u4f7f\u7528\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b Int\u3001Binary \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/int_binary.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_int_float","title":"<code>04-SuperTables.03-Query.test_tag_int_float</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_int_float.TestTagIntFloat","title":"<code>TestTagIntFloat</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_int_float.TestTagIntFloat.test_tag_int_float","title":"<code>test_tag_int_float()</code>","text":"<p>Int \u548c Float \u7c7b\u578b\u6807\u7b7e\u6df7\u5408\u4f7f\u7528\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b Int\u3001Float \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/int_float.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_smallint","title":"<code>04-SuperTables.03-Query.test_tag_smallint</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_smallint.TestTagSmallInt","title":"<code>TestTagSmallInt</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_smallint.TestTagSmallInt.test_tag_smallint","title":"<code>test_tag_smallint()</code>","text":"<p>SmallInt \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b SmallInt \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/smallint.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_tbname_in","title":"<code>04-SuperTables.03-Query.test_tag_tbname_in</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_tbname_in.TestTbnameIn","title":"<code>TestTbnameIn</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_tbname_in.TestTbnameIn.test_tag_tbname_in","title":"<code>test_tag_tbname_in()</code>","text":"<p>\u5e26\u6709 tbname in \u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e tbname in \u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/tbNameIn.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_tinyint","title":"<code>04-SuperTables.03-Query.test_tag_tinyint</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_tinyint.TestTagTinyInt","title":"<code>TestTagTinyInt</code>","text":""},{"location":"case_list_docs/04-SuperTables/03-Query/#04-SuperTables.03-Query.test_tag_tinyint.TestTagTinyInt.test_tag_tinyint","title":"<code>test_tag_tinyint()</code>","text":"<p>TinyInt \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u5305\u542b TinyInt \u7c7b\u578b\u6807\u7b7e\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u63d2\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c\u57fa\u4e8e\u6807\u7b7e\u7b5b\u9009\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u5305\u62ec\u6295\u5f71\u67e5\u8be2\u3001\u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2</li> </ol> Catalog <ul> <li>SuperTable:Tags</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/tag/tinyint.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/04-Create/","title":"04 Create","text":""},{"location":"case_list_docs/04-SuperTables/04-Create/#04-SuperTables.04-Create.test_stable_metrics","title":"<code>04-SuperTables.04-Create.test_stable_metrics</code>","text":""},{"location":"case_list_docs/04-SuperTables/04-Create/#04-SuperTables.04-Create.test_stable_metrics.TestStableMetrics","title":"<code>TestStableMetrics</code>","text":""},{"location":"case_list_docs/04-SuperTables/04-Create/#04-SuperTables.04-Create.test_stable_metrics.TestStableMetrics.test_stable_metrics","title":"<code>test_stable_metrics()</code>","text":"<p>create super table 1</p> <ol> <li>create super table</li> <li>show tables</li> <li>select from ins_tables</li> <li>select from ins_stables</li> <li>insert data</li> <li>drop table</li> <li>show tables</li> </ol> Catalog <ul> <li>SuperTables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-30 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/metrics.sim</li> </ul>"},{"location":"case_list_docs/04-SuperTables/04-Create/#04-SuperTables.04-Create.test_stable_refcount","title":"<code>04-SuperTables.04-Create.test_stable_refcount</code>","text":""},{"location":"case_list_docs/04-SuperTables/04-Create/#04-SuperTables.04-Create.test_stable_refcount.TestStableRefcount","title":"<code>TestStableRefcount</code>","text":""},{"location":"case_list_docs/04-SuperTables/04-Create/#04-SuperTables.04-Create.test_stable_refcount.TestStableRefcount.test_stable_refcount","title":"<code>test_stable_refcount()</code>","text":"<p>create super table 2</p> <ol> <li>create database</li> <li>create stable</li> <li>insert data</li> <li>drop table</li> <li>repeat 5 times</li> </ol> Catalog <ul> <li>SuperTables:Create</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-30 Simon Guan Migrated to new test framework, from tests/script/tsim/stable/refcount.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/01-Operator/","title":"01 Operator","text":""},{"location":"case_list_docs/07-DataQuerying/01-Operator/#07-DataQuerying.01-Operator.test_operator_and_or","title":"<code>07-DataQuerying.01-Operator.test_operator_and_or</code>","text":""},{"location":"case_list_docs/07-DataQuerying/01-Operator/#07-DataQuerying.01-Operator.test_operator_and_or.TestOperatorAndOr","title":"<code>TestOperatorAndOr</code>","text":""},{"location":"case_list_docs/07-DataQuerying/01-Operator/#07-DataQuerying.01-Operator.test_operator_and_or.TestOperatorAndOr.test_operator_and_or","title":"<code>test_operator_and_or()</code>","text":"<p>And\u3001Or \u8fd0\u7b97\u7b26</p> <ol> <li>\u521b\u5efa\u591a\u79cd\u6570\u636e\u7c7b\u578b\u7684\u8d85\u7ea7\u8868\u548c\u5b50\u8868</li> <li>\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u666e\u901a\u6570\u636e\u5217\u7684 timestamp\u3001int \u7b49\u7c7b\u578b\u6267\u884c and+or \u6df7\u5408\u7b5b\u9009</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/scalar/filter.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/01-Operator/#07-DataQuerying.01-Operator.test_operator_casewhen","title":"<code>07-DataQuerying.01-Operator.test_operator_casewhen</code>","text":""},{"location":"case_list_docs/07-DataQuerying/01-Operator/#07-DataQuerying.01-Operator.test_operator_casewhen.TestOperatorCaseWhen","title":"<code>TestOperatorCaseWhen</code>","text":""},{"location":"case_list_docs/07-DataQuerying/01-Operator/#07-DataQuerying.01-Operator.test_operator_casewhen.TestOperatorCaseWhen.test_operator_case_when","title":"<code>test_operator_case_when()</code>","text":"<p>And Or \u8fd0\u7b97\u7b26</p> <ol> <li>\u521b\u5efa\u591a\u79cd\u6570\u636e\u7c7b\u578b\u7684\u8d85\u7ea7\u8868\u548c\u5b50\u8868</li> <li>\u5199\u5165\u6570\u636e</li> <li>case when \u7ed3\u679c\u4e2d\u5305\u542b\u6570\u636e\u5217</li> <li>case when \u7ed3\u679c\u4e2d\u5305\u542b\u805a\u5408\u51fd\u6570</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/scalar/caseWhen.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/01-Operator/#07-DataQuerying.01-Operator.test_operator_in","title":"<code>07-DataQuerying.01-Operator.test_operator_in</code>","text":""},{"location":"case_list_docs/07-DataQuerying/01-Operator/#07-DataQuerying.01-Operator.test_operator_in.TestOperatorIn","title":"<code>TestOperatorIn</code>","text":""},{"location":"case_list_docs/07-DataQuerying/01-Operator/#07-DataQuerying.01-Operator.test_operator_in.TestOperatorIn.test_operator_in","title":"<code>test_operator_in()</code>","text":"<p>In \u8fd0\u7b97\u7b26</p> <ol> <li>\u521b\u5efa\u591a\u79cd\u6570\u636e\u7c7b\u578b\u7684\u8d85\u7ea7\u8868\u548c\u5b50\u8868</li> <li>\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u666e\u901a\u6570\u636e\u5217\u7684 timestamp\u3001int \u7b49\u7c7b\u578b\u6267\u884c in \u67e5\u8be2</li> <li>\u5bf9\u6807\u7b7e\u6570\u636e\u5217\u7684 bool\u3001int \u7b49\u7c7b\u578b\u6267\u884c in \u67e5\u8be2</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/scalar/in.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/02-Project/","title":"02 Project","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_column_1","title":"<code>07-DataQuerying.02-Project.test_project_column_1</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_column_1.TestProjectColumn1","title":"<code>TestProjectColumn1</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_column_1.TestProjectColumn1.test_project_column_1","title":"<code>test_project_column_1()</code>","text":"<p>1 \u4e2a\u6570\u636e\u5217\u7684\u5b50\u8868\u6295\u5f71\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 1 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u56db\u5219\u8fd0\u7b97</li> <li>\u589e\u52a0\u65f6\u95f4\u7b5b\u9009\u6761\u4ef6</li> <li>\u589e\u52a0\u6392\u5e8f</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/vector/single.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_column_7","title":"<code>07-DataQuerying.02-Project.test_project_column_7</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_column_7.TestProjectColumn7","title":"<code>TestProjectColumn7</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_column_7.TestProjectColumn7.test_project_column_7","title":"<code>test_project_column_7()</code>","text":"<p>7 \u4e2a\u6570\u636e\u5217\u7684\u5b50\u8868\u6295\u5f71\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b 7 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\uff0c\u6570\u636e\u5217\u5305\u62ec bool\u3001smallint\u3001tinyint\u3001float\u3001double\u3001int\u3001binary</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u56db\u5219\u8fd0\u7b97</li> <li>\u589e\u52a0\u65f6\u95f4\u3001\u666e\u901a\u5217\u7b5b\u9009\u6761\u4ef6</li> <li>\u589e\u52a0\u6392\u5e8f</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/vector/multi.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_column","title":"<code>07-DataQuerying.02-Project.test_project_stable_filter_column</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_column.TestProjectSTableFilterColumn","title":"<code>TestProjectSTableFilterColumn</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_column.TestProjectSTableFilterColumn.test_project_stable_filter_column","title":"<code>test_project_stable_filter_column()</code>","text":"<p>\u8d85\u7ea7\u8868\u6295\u5f71\u67e5\u8be2(\u666e\u901a\u5217\u7b5b\u9009)</p> <ol> <li>\u521b\u5efa\u5305\u542b 7 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\uff0c\u6570\u636e\u5217\u5305\u62ec bool\u3001smallint\u3001tinyint\u3001float\u3001double\u3001int\u3001binary</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u56db\u5219\u8fd0\u7b97</li> <li>\u589e\u52a0\u666e\u901a\u5217\u7b5b\u9009</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/vector/metrics_field.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_column_tag_timestamp","title":"<code>07-DataQuerying.02-Project.test_project_stable_filter_column_tag_timestamp</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_column_tag_timestamp.TestProjectSTableFilterColumnTagTimestamp","title":"<code>TestProjectSTableFilterColumnTagTimestamp</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_column_tag_timestamp.TestProjectSTableFilterColumnTagTimestamp.test_project_stable_filter_column_tag_timestamp","title":"<code>test_project_stable_filter_column_tag_timestamp()</code>","text":"<p>\u8d85\u7ea7\u8868\u6295\u5f71\u67e5\u8be2(\u6807\u7b7e\u5217+\u666e\u901a\u5217+\u65f6\u95f4\u6233\u7b5b\u9009)</p> <ol> <li>\u521b\u5efa\u5305\u542b 7 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\uff0c\u6570\u636e\u5217\u5305\u62ec bool\u3001smallint\u3001tinyint\u3001float\u3001double\u3001int\u3001binary</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u56db\u5219\u8fd0\u7b97</li> <li>\u589e\u52a0\u6807\u7b7e\u5217+\u666e\u901a\u5217+\u65f6\u95f4\u6233\u7b5b\u9009</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/vector/metrics_mix.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_no","title":"<code>07-DataQuerying.02-Project.test_project_stable_filter_no</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_no.TestProjectSTableFilterNo","title":"<code>TestProjectSTableFilterNo</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_no.TestProjectSTableFilterNo.test_project_stable_filter_no","title":"<code>test_project_stable_filter_no()</code>","text":"<p>\u8d85\u7ea7\u8868\u6295\u5f71\u67e5\u8be2(\u65e0\u7b5b\u9009\u6761\u4ef6)</p> <ol> <li>\u521b\u5efa\u5305\u542b 7 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\uff0c\u6570\u636e\u5217\u5305\u62ec bool\u3001smallint\u3001tinyint\u3001float\u3001double\u3001int\u3001binary</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u56db\u5219\u8fd0\u7b97</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/vector/metrics_query.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_tag","title":"<code>07-DataQuerying.02-Project.test_project_stable_filter_tag</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_tag.TestProjectSTableFilterTag","title":"<code>TestProjectSTableFilterTag</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_tag.TestProjectSTableFilterTag.test_project_stable_filter_tag","title":"<code>test_project_stable_filter_tag()</code>","text":"<p>\u8d85\u7ea7\u8868\u6295\u5f71\u67e5\u8be2(\u6807\u7b7e\u5217\u7b5b\u9009)</p> <ol> <li>\u521b\u5efa\u5305\u542b 7 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\uff0c\u6570\u636e\u5217\u5305\u62ec bool\u3001smallint\u3001tinyint\u3001float\u3001double\u3001int\u3001binary</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u56db\u5219\u8fd0\u7b97</li> <li>\u589e\u52a0\u6807\u7b7e\u5217\u7b5b\u9009</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/vector/metrics_tag.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_timestamp","title":"<code>07-DataQuerying.02-Project.test_project_stable_filter_timestamp</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_timestamp.TestProjectSTableFilterTimestamp","title":"<code>TestProjectSTableFilterTimestamp</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_stable_filter_timestamp.TestProjectSTableFilterTimestamp.test_project_stable_filter_timestamp","title":"<code>test_project_stable_filter_timestamp()</code>","text":"<p>\u8d85\u7ea7\u8868\u6295\u5f71\u67e5\u8be2(\u65f6\u95f4\u6233\u7b5b\u9009)</p> <ol> <li>\u521b\u5efa\u5305\u542b 7 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\uff0c\u6570\u636e\u5217\u5305\u62ec bool\u3001smallint\u3001tinyint\u3001float\u3001double\u3001int\u3001binary</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u8d85\u7ea7\u8868\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u56db\u5219\u8fd0\u7b97</li> <li>\u589e\u52a0\u65f6\u95f4\u6233\u7b5b\u9009</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/vector/metrics_time.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_column","title":"<code>07-DataQuerying.02-Project.test_project_table_filter_column</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_column.TestProjectTableFilterColumn","title":"<code>TestProjectTableFilterColumn</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_column.TestProjectTableFilterColumn.test_project_table_filter_column","title":"<code>test_project_table_filter_column()</code>","text":"<p>\u5b50\u8868\u6295\u5f71\u67e5\u8be2(\u666e\u901a\u5217\u7b5b\u9009)</p> <ol> <li>\u521b\u5efa\u5305\u542b 7 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\uff0c\u6570\u636e\u5217\u5305\u62ec bool\u3001smallint\u3001tinyint\u3001float\u3001double\u3001int\u3001binary</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u56db\u5219\u8fd0\u7b97\uff0c\u5e26\u6709\u666e\u901a\u5217\u7b5b\u9009\u6761\u4ef6</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/vector/table_column.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_column_timestamp","title":"<code>07-DataQuerying.02-Project.test_project_table_filter_column_timestamp</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_column_timestamp.TestProjectTableFilterColumnTimestamp","title":"<code>TestProjectTableFilterColumnTimestamp</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_column_timestamp.TestProjectTableFilterColumnTimestamp.test_project_table_filter_column_timestamp","title":"<code>test_project_table_filter_column_timestamp()</code>","text":"<p>\u5b50\u8868\u6295\u5f71\u67e5\u8be2(\u666e\u901a\u5217\u52a0\u65f6\u95f4\u6233\u7b5b\u9009)</p> <ol> <li>\u521b\u5efa\u5305\u542b 7 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\uff0c\u6570\u636e\u5217\u5305\u62ec bool\u3001smallint\u3001tinyint\u3001float\u3001double\u3001int\u3001binary</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u56db\u5219\u8fd0\u7b97\uff0c\u5e26\u6709\u666e\u901a\u5217\u7b5b\u9009\u6761\u4ef6</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/vector/table_mix.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_no","title":"<code>07-DataQuerying.02-Project.test_project_table_filter_no</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_no.TestProjectTableFilterNo","title":"<code>TestProjectTableFilterNo</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_no.TestProjectTableFilterNo.test_project_table_filter_no","title":"<code>test_project_table_filter_no()</code>","text":"<p>\u5b50\u8868\u6295\u5f71\u67e5\u8be2(\u65e0\u7b5b\u9009\u6761\u4ef6)</p> <ol> <li>\u521b\u5efa\u5305\u542b 7 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\uff0c\u6570\u636e\u5217\u5305\u62ec bool\u3001smallint\u3001tinyint\u3001float\u3001double\u3001int\u3001binary</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u56db\u5219\u8fd0\u7b97</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/vector/table_query.sim</li> </ul>"},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_timestamp","title":"<code>07-DataQuerying.02-Project.test_project_table_filter_timestamp</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_timestamp.TestProjectTableFilterTimestamp","title":"<code>TestProjectTableFilterTimestamp</code>","text":""},{"location":"case_list_docs/07-DataQuerying/02-Project/#07-DataQuerying.02-Project.test_project_table_filter_timestamp.TestProjectTableFilterTimestamp.test_project_table_filter_timestamp","title":"<code>test_project_table_filter_timestamp()</code>","text":"<p>\u5b50\u8868\u6295\u5f71\u67e5\u8be2(\u65f6\u95f4\u6233\u7b5b\u9009)</p> <ol> <li>\u521b\u5efa\u5305\u542b 7 \u4e2a\u666e\u901a\u6570\u636e\u5217\u548c 1 \u4e2a\u6807\u7b7e\u5217\u7684\u8d85\u7ea7\u8868\uff0c\u6570\u636e\u5217\u5305\u62ec bool\u3001smallint\u3001tinyint\u3001float\u3001double\u3001int\u3001binary</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u8fdb\u884c\u6295\u5f71\u67e5\u8be2\u3001\u56db\u5219\u8fd0\u7b97\uff0c\u5e26\u6709\u65f6\u95f4\u6233\u7b5b\u9009\u6761\u4ef6</li> </ol> Catalog <ul> <li>Query:Project</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/vector/table_time.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/01-SingleRow/","title":"01 SingleRow","text":""},{"location":"case_list_docs/10-Functions/01-SingleRow/#10-Functions.01-SingleRow.test_func_cast","title":"<code>10-Functions.01-SingleRow.test_func_cast</code>","text":""},{"location":"case_list_docs/10-Functions/01-SingleRow/#10-Functions.01-SingleRow.test_func_cast.TestFuncCast","title":"<code>TestFuncCast</code>","text":""},{"location":"case_list_docs/10-Functions/01-SingleRow/#10-Functions.01-SingleRow.test_func_cast.TestFuncCast.test_func_cast","title":"<code>test_func_cast()</code>","text":"<p>Cast \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868\u3001\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u6267\u884c\u6700\u57fa\u672c\u7684 cast \u51fd\u6570\uff0c\u8f6c\u6362\u6570\u5b57\u548c\u65f6\u95f4\u6233</li> </ol> Catalog <ul> <li>Function:SingleRow</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/scalar/scalar.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/01-SingleRow/#10-Functions.01-SingleRow.test_func_truncate","title":"<code>10-Functions.01-SingleRow.test_func_truncate</code>","text":""},{"location":"case_list_docs/10-Functions/01-SingleRow/#10-Functions.01-SingleRow.test_func_truncate.TestFuncTruncate","title":"<code>TestFuncTruncate</code>","text":""},{"location":"case_list_docs/10-Functions/01-SingleRow/#10-Functions.01-SingleRow.test_func_truncate.TestFuncTruncate.test_func_truncate","title":"<code>test_func_truncate()</code>","text":"<p>Truncate \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u8d85\u7ea7\u8868\u3001\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u6267\u884c\u6700\u57fa\u672c\u7684 Truncate \u51fd\u6570</li> <li>\u8fdb\u884c\u4e00\u4e9b timestamp \u7684\u8f6c\u6362\u64cd\u4f5c</li> </ol> Catalog <ul> <li>Function:SingleRow</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/scalar/tsConvert.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/02-Aggregate/","title":"02 Aggregate","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_avg","title":"<code>10-Functions.02-Aggregate.test_func_avg</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_avg.TestFuncAvg","title":"<code>TestFuncAvg</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_avg.TestFuncAvg.test_func_avg","title":"<code>test_func_avg()</code>","text":"<p>Avg \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Avg \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c Avg \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u3001\u6807\u7b7e\u5217\u7b5b\u9009\u3001Group By\u3001Partition By</li> </ol> Catalog <ul> <li>Function:Aggregate</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/avg.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_count","title":"<code>10-Functions.02-Aggregate.test_func_count</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_count.TestFuncCount","title":"<code>TestFuncCount</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_count.TestFuncCount.test_func_count","title":"<code>test_func_count()</code>","text":"<p>Count \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Count \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c Count \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u3001\u6807\u7b7e\u5217\u7b5b\u9009\u3001Group By\u3001Partition By</li> </ol> Catalog <ul> <li>Function:Aggregate</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/count.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_leastsquares","title":"<code>10-Functions.02-Aggregate.test_func_leastsquares</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_leastsquares.TestFuncLeastsquares","title":"<code>TestFuncLeastsquares</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_leastsquares.TestFuncLeastsquares.test_func_leastsquares","title":"<code>test_func_leastsquares()</code>","text":"<p>Leastsquares \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Leastsquares \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u65f6\u95f4\u6233\u5217\u7b5b\u9009</li> </ol> Catalog <ul> <li>Function:Aggregate</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/leastsquare.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_percentile","title":"<code>10-Functions.02-Aggregate.test_func_percentile</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_percentile.TestFuncPercentile","title":"<code>TestFuncPercentile</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_percentile.TestFuncPercentile.test_func_percentile","title":"<code>test_func_percentile()</code>","text":"<p>Percentile \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Percentile \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u65f6\u95f4\u6233\u5217\u7b5b\u9009</li> </ol> Catalog <ul> <li>Function:Aggregate</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/percentile.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_stddev","title":"<code>10-Functions.02-Aggregate.test_func_stddev</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_stddev.TestFuncStddev","title":"<code>TestFuncStddev</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_stddev.TestFuncStddev.test_func_stddev","title":"<code>test_func_stddev()</code>","text":"<p>Stddev \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Stddev \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u65f6\u95f4\u6233\u5217\u7b5b\u9009</li> </ol> Catalog <ul> <li>Function:Aggregate</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/stddev.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_sum","title":"<code>10-Functions.02-Aggregate.test_func_sum</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_sum.TestFuncSum","title":"<code>TestFuncSum</code>","text":""},{"location":"case_list_docs/10-Functions/02-Aggregate/#10-Functions.02-Aggregate.test_func_sum.TestFuncSum.test_func_sum","title":"<code>test_func_sum()</code>","text":"<p>Sum \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Sum \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c Sum \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u3001\u6807\u7b7e\u5217\u7b5b\u9009\u3001Group By\u3001Partition By</li> </ol> Catalog <ul> <li>Function:Aggregate</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/sum.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/03-Selection/","title":"03 Selection","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_bottom","title":"<code>10-Functions.03-Selection.test_func_bottom</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_bottom.TestFuncBottom","title":"<code>TestFuncBottom</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_bottom.TestFuncBottom.test_func_bottom","title":"<code>test_func_bottom()</code>","text":"<p>Bottom \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Bottom \u67e5\u8be2</li> </ol> Catalog <ul> <li>Function:Selection</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/bottom.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_first","title":"<code>10-Functions.03-Selection.test_func_first</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_first.TestFuncFirst","title":"<code>TestFuncFirst</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_first.TestFuncFirst.test_func_first","title":"<code>test_func_first()</code>","text":"<p>First \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c First \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c First \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u3001\u6807\u7b7e\u5217\u7b5b\u9009\u3001Group By\u3001Partition By</li> </ol> Catalog <ul> <li>Function:Selection</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/first.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_last","title":"<code>10-Functions.03-Selection.test_func_last</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_last.TestFuncLast","title":"<code>TestFuncLast</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_last.TestFuncLast.test_func_last","title":"<code>test_func_last()</code>","text":"<p>Last \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Last \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c Last \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u3001\u6807\u7b7e\u5217\u7b5b\u9009\u3001Group By\u3001Partition By</li> </ol> Catalog <ul> <li>Function:Selection</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/last.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_last_lru","title":"<code>10-Functions.03-Selection.test_func_last_lru</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_last_lru.TestFuncLast","title":"<code>TestFuncLast</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_last_lru.TestFuncLast.test_func_last","title":"<code>test_func_last()</code>","text":"<p>Last \u51fd\u6570\uff08\u5185\u5b58\u4e0d\u8db3\u3001\u591a Vgroup\u3001\u590d\u6742\u67e5\u8be2\uff09</p> <ol> <li>\u521b\u5efa\u5185\u5b58\u4e0d\u8db3\u7684\u6570\u636e\u5e93</li> <li>\u521b\u5efa\u8d85\u7ea7\u8868\u3001\u5b50\u8868\u3001\u5199\u5165\u6570\u636e</li> <li>\u8fdb\u884c first/count/last/tbname/\u6392\u5e8f/interval/group by \u7b49\u7684\u6df7\u5408\u67e5\u8be2</li> <li>\u521b\u5efa\u5185\u5b58\u5145\u8db3\u7684\u6570\u636e\u5e93</li> <li>\u91cd\u590d\u4ee5\u4e0a\u67e5\u8be2</li> <li>\u521b\u5efa vroups=4 \u7684\u6570\u636e\u5e93</li> <li>\u91cd\u590d\u4ee5\u4e0a\u67e5\u8be2</li> </ol> Catalog <ul> <li>Function:Selection</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/query/cache_last.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_last_row","title":"<code>10-Functions.03-Selection.test_func_last_row</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_last_row.TestFuncLastRow","title":"<code>TestFuncLastRow</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_last_row.TestFuncLastRow.test_func_lastrow","title":"<code>test_func_lastrow()</code>","text":"<p>Last_Row \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Last_Row \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c Last_Row \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u3001\u6807\u7b7e\u5217\u7b5b\u9009\u3001Group By\u3001Partition By</li> <li>\u521b\u5efa\u4e00\u4e2a cacheModel = both \u7684\u6570\u636e\u5e93\uff0c\u91cd\u590d\u4ee5\u4e0a\u6d4b\u8bd5</li> </ol> Catalog <ul> <li>Function:Selection</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/last_row.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_max","title":"<code>10-Functions.03-Selection.test_func_max</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_max.TestFuncMax","title":"<code>TestFuncMax</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_max.TestFuncMax.test_func_max","title":"<code>test_func_max()</code>","text":"<p>Max \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Max \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c Max \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u3001\u6807\u7b7e\u5217\u7b5b\u9009\u3001Group By\u3001Partition By</li> </ol> Catalog <ul> <li>Function:Selection</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/max.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_min","title":"<code>10-Functions.03-Selection.test_func_min</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_min.TestFuncMin","title":"<code>TestFuncMin</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_min.TestFuncMin.test_func_min","title":"<code>test_func_min()</code>","text":"<p>Min \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Min \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009</li> <li>\u5bf9\u8d85\u7ea7\u8868\u6267\u884c Min \u67e5\u8be2\uff0c\u5305\u62ec\u65f6\u95f4\u7a97\u53e3\u3001\u666e\u901a\u6570\u636e\u5217\u7b5b\u9009\u3001\u6807\u7b7e\u5217\u7b5b\u9009\u3001Group By\u3001Partition By</li> </ol> Catalog <ul> <li>Function:Selection</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/min.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_top","title":"<code>10-Functions.03-Selection.test_func_top</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_top.TestFuncTop","title":"<code>TestFuncTop</code>","text":""},{"location":"case_list_docs/10-Functions/03-Selection/#10-Functions.03-Selection.test_func_top.TestFuncTop.test_func_top","title":"<code>test_func_top()</code>","text":"<p>Top \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Top \u67e5\u8be2</li> </ol> Catalog <ul> <li>Function:Selection</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/top.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/04-TimeseriesSpecfic/","title":"04 TimeseriesSpecfic","text":""},{"location":"case_list_docs/10-Functions/04-TimeseriesSpecfic/#10-Functions.04-TimeseriesSpecfic.test_func_diff","title":"<code>10-Functions.04-TimeseriesSpecfic.test_func_diff</code>","text":""},{"location":"case_list_docs/10-Functions/04-TimeseriesSpecfic/#10-Functions.04-TimeseriesSpecfic.test_func_diff.TestFuncDiff","title":"<code>TestFuncDiff</code>","text":""},{"location":"case_list_docs/10-Functions/04-TimeseriesSpecfic/#10-Functions.04-TimeseriesSpecfic.test_func_diff.TestFuncDiff.test_func_diff","title":"<code>test_func_diff()</code>","text":"<p>Diff \u51fd\u6570</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Diff \u67e5\u8be2</li> </ol> Catalog <ul> <li>Function:Timeseries</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/diff.sim</li> </ul>"},{"location":"case_list_docs/10-Functions/04-TimeseriesSpecfic/#10-Functions.04-TimeseriesSpecfic.test_func_diff2","title":"<code>10-Functions.04-TimeseriesSpecfic.test_func_diff2</code>","text":""},{"location":"case_list_docs/10-Functions/04-TimeseriesSpecfic/#10-Functions.04-TimeseriesSpecfic.test_func_diff2.TestFuncDiff2","title":"<code>TestFuncDiff2</code>","text":""},{"location":"case_list_docs/10-Functions/04-TimeseriesSpecfic/#10-Functions.04-TimeseriesSpecfic.test_func_diff2.TestFuncDiff2.test_func_diff2","title":"<code>test_func_diff2()</code>","text":"<p>Diff \u51fd\u6570\uff08\u591a\u4e2a\u6570\u636e\u7c7b\u578b\uff09</p> <ol> <li>\u521b\u5efa\u5305\u542b Int\u3001Float\u3001Bigint\u3001Smallint\u3001Tinyint\u3001Double\u3001Bool\u3001Nchar Binary \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5bf9\u5b50\u8868\u6267\u884c Diff \u67e5\u8be2</li> </ol> Catalog <ul> <li>Function:Timeseries</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/diff2.sim</li> </ul>"},{"location":"case_list_docs/11-TimeSeriesExtensions/14-TimeWindow/","title":"14 TimeWindow","text":""},{"location":"case_list_docs/11-TimeSeriesExtensions/14-TimeWindow/#11-TimeSeriesExtensions.14-TimeWindow.test_interval","title":"<code>11-TimeSeriesExtensions.14-TimeWindow.test_interval</code>","text":""},{"location":"case_list_docs/11-TimeSeriesExtensions/14-TimeWindow/#11-TimeSeriesExtensions.14-TimeWindow.test_interval.TestInterval","title":"<code>TestInterval</code>","text":""},{"location":"case_list_docs/11-TimeSeriesExtensions/14-TimeWindow/#11-TimeSeriesExtensions.14-TimeWindow.test_interval.TestInterval.test_interval","title":"<code>test_interval()</code>","text":"<p>\u65f6\u95f4\u7a97\u53e3\u57fa\u672c\u67e5\u8be2</p> <ol> <li>\u521b\u5efa\u5305\u542b\u4e00\u4e2a Int \u666e\u901a\u6570\u636e\u5217\u7684\u8d85\u7ea7\u8868</li> <li>\u521b\u5efa\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5728 1m \u7a97\u53e3\u5185\u8fdb\u884c count/avg/max/min</li> <li>\u589e\u52a0\u65f6\u95f4\u6233\u7b5b\u9009\u548c Fill \u5b57\u53e5\u67e5\u8be2</li> </ol> Catalog <ul> <li>Timeseries:TimeWindow</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/interval.sim</li> </ul>"},{"location":"case_list_docs/11-TimeSeriesExtensions/14-TimeWindow/#11-TimeSeriesExtensions.14-TimeWindow.test_interval_bug","title":"<code>11-TimeSeriesExtensions.14-TimeWindow.test_interval_bug</code>","text":""},{"location":"case_list_docs/11-TimeSeriesExtensions/14-TimeWindow/#11-TimeSeriesExtensions.14-TimeWindow.test_interval_bug.TestInterval","title":"<code>TestInterval</code>","text":""},{"location":"case_list_docs/11-TimeSeriesExtensions/14-TimeWindow/#11-TimeSeriesExtensions.14-TimeWindow.test_interval_bug.TestInterval.test_interval","title":"<code>test_interval()</code>","text":"<p>\u65f6\u95f4\u7a97\u53e3\u586b\u5145 1y \u7684\u6545\u969c</p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u7279\u5b9a\u9009\u9879\u7684\u6570\u636e</li> <li>\u521b\u5efa\u8d85\u7ea7\u8868\u3001\u5b50\u8868\u5e76\u5199\u5165\u6570\u636e</li> <li>\u5199\u5165\u4ec5\u4e00\u6761\u6570\u636e</li> <li>\u8fdb\u884c 1y \u7684\u65f6\u95f4\u7a97\u53e3\u67e5\u8be2</li> </ol> Catalog <ul> <li>Timeseries:TimeWindow</li> </ul> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2025-4-28 Simon Guan Migrated to new test framework, from tests/script/tsim/compute/interval1.sim</li> </ul>"},{"location":"case_list_docs/data_write/sql_statement/","title":"Sql statement","text":""},{"location":"case_list_docs/data_write/sql_statement/#data_write.sql_statement.test_insert_double","title":"<code>data_write.sql_statement.test_insert_double</code>","text":""},{"location":"case_list_docs/data_write/sql_statement/#data_write.sql_statement.test_insert_double.TestInsertDouble","title":"<code>TestInsertDouble</code>","text":""},{"location":"case_list_docs/data_write/sql_statement/#data_write.sql_statement.test_insert_double.TestInsertDouble.test_insert_double","title":"<code>test_insert_double()</code>","text":"<p>\u6d4b\u8bd5\u63d2\u5165\u5404\u79cddouble\u503c</p> <p>\u63d2\u5165\u5404\u79cddouble\u503c\u5305\u62ec\u6b63\u8d1f\u503c\u3001\u79d1\u5b66\u8ba1\u6570\u6cd5\u3001\u5341\u516d\u8fdb\u5236\u3001\u4e8c\u8fdb\u5236\u3001\u5b57\u7b26\u4e32</p> <p>Since: v3.0.0.0</p> <p>Labels: common,ci</p> <p>Jira: None</p> History <ul> <li>2024-2-6 Feng Chao Created</li> <li>2025-2-26 Huo Hong Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/high_availability/cluster_expansion_reduction/","title":"Cluster expansion reduction","text":""},{"location":"case_list_docs/high_availability/cluster_expansion_reduction/#high_availability.cluster_expansion_reduction.test_5dnode_3mnode_add_1dnode","title":"<code>high_availability.cluster_expansion_reduction.test_5dnode_3mnode_add_1dnode</code>","text":""},{"location":"case_list_docs/high_availability/cluster_expansion_reduction/#high_availability.cluster_expansion_reduction.test_5dnode_3mnode_add_1dnode.Test5dnode3mnodeAdd1Dnode","title":"<code>Test5dnode3mnodeAdd1Dnode</code>","text":""},{"location":"case_list_docs/high_availability/cluster_expansion_reduction/#high_availability.cluster_expansion_reduction.test_5dnode_3mnode_stop","title":"<code>high_availability.cluster_expansion_reduction.test_5dnode_3mnode_stop</code>","text":""},{"location":"case_list_docs/high_availability/cluster_expansion_reduction/#high_availability.cluster_expansion_reduction.test_5dnode_3mnode_stop.Test5dnode3mnodeStop","title":"<code>Test5dnode3mnodeStop</code>","text":""},{"location":"case_list_docs/high_availability/cluster_expansion_reduction/#high_availability.cluster_expansion_reduction.test_5dnode_3mnode_stop.Test5dnode3mnodeStop.test_five_dnode_three_mnode","title":"<code>test_five_dnode_three_mnode()</code>","text":"<p>\u6d4b\u8bd5\u591a\u8282\u70b9\u96c6\u7fa4\u7f29\u6269\u5bb9\u540emnode\u72b6\u6001</p> <p>5\u8282\u70b9\u96c6\u7fa4\u505c\u6b62\u3001\u542f\u52a8\u5404\u4e2adnode\u540e, \u68c0\u67e5mnode\u72b6\u6001</p> <p>Since: v3.3.0.0</p> <p>Labels: cluster,ci</p> <p>Jira: None</p> History <ul> <li>2024-2-6 Feng Chao Created</li> <li>2025-3-10 Huo Hong Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/high_availability/cluster_expansion_reduction/#high_availability.cluster_expansion_reduction.test_cluster_basic","title":"<code>high_availability.cluster_expansion_reduction.test_cluster_basic</code>","text":""},{"location":"case_list_docs/high_availability/cluster_expansion_reduction/#high_availability.cluster_expansion_reduction.test_cluster_basic.TestClusterBasic","title":"<code>TestClusterBasic</code>","text":""},{"location":"case_list_docs/high_availability/cluster_expansion_reduction/#high_availability.cluster_expansion_reduction.test_cluster_basic.TestClusterBasic.test_check_cluster_empty_db","title":"<code>test_check_cluster_empty_db()</code>","text":"<p>\u6d4b\u8bd5\u591a\u8282\u70b9\u96c6\u7fa4\u7f29\u51cf</p> <p>5\u8282\u70b9\u96c6\u7fa4\u505c\u6b62\u4e24\u4e2adnode\u540ecluster\u72b6\u6001\u4ecd\u4e3aalive</p> <p>Since: v3.3.0.0</p> <p>Labels: cluster</p> <p>Jira: None</p> History <ul> <li>2024-2-6 Feng Chao Created</li> <li>2025-3-10 Huo Hong Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/high_availability/cluster_expansion_reduction/#high_availability.cluster_expansion_reduction.test_cluster_basic.TestClusterBasic.test_check_cluster_with_db","title":"<code>test_check_cluster_with_db()</code>","text":"<p>\u6d4b\u8bd5\u591a\u8282\u70b9\u96c6\u7fa4\u6269\u5bb9</p> <p>5\u8282\u70b9\u96c6\u7fa4\u521b\u5efa\u6570\u636e\u5e93,\u7f29\u51cf\u96c6\u7fa4\u52303\u8282\u70b9\u540e,cluster\u72b6\u6001\u4ecd\u4e3aalive</p> <p>Since: v3.3.0.0</p> <p>Labels: cluster</p> <p>Jira: None </p> History <ul> <li>2024-2-6 Feng Chao Created</li> <li>2025-3-10 Huo Hong Migrated to new test framework</li> </ul>"},{"location":"case_list_docs/metadata/db/","title":"Db","text":""},{"location":"case_list_docs/metadata/db/#metadata.db.test_keep_time_offset","title":"<code>metadata.db.test_keep_time_offset</code>","text":""},{"location":"case_list_docs/storage/compress/","title":"Compress","text":""},{"location":"case_list_docs/storage/compress/#storage.compress.test_compress_basic","title":"<code>storage.compress.test_compress_basic</code>","text":""},{"location":"case_list_docs/storage/multilevel/","title":"Multilevel","text":""},{"location":"case_list_docs/storage/multilevel/#storage.multilevel.test_mlevel_basic","title":"<code>storage.multilevel.test_mlevel_basic</code>","text":""},{"location":"case_list_docs/storage/tsma/","title":"Tsma","text":""},{"location":"case_list_docs/storage/tsma/#storage.tsma.test_tsma","title":"<code>storage.tsma.test_tsma</code>","text":""},{"location":"case_list_docs/tools/benchmark/","title":"Benchmark","text":""},{"location":"case_list_docs/tools/benchmark/#tools.benchmark.test_taosdemo_query_with_json","title":"<code>tools.benchmark.test_taosdemo_query_with_json</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/","title":"Utils","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#__init__","title":"<code>__init__</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.BeforeTest","title":"<code>BeforeTest</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.BeforeTest.create_database","title":"<code>create_database(request, db_name, host, port)</code>","text":"<p>\u521b\u5efamodule\u7ea7\u522b\u7684\u6570\u636e\u5e93</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.BeforeTest.deploy_taos","title":"<code>deploy_taos(yaml_file, mnodes_num=1)</code>","text":"<p>get env directory from request; use yaml file for tostest run;</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.ClusterComCheck","title":"<code>ClusterComCheck</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.ClusterComCheck.check_vgroups_status","title":"<code>check_vgroups_status(vgroup_numbers=2, db_replica=3, count_number=10, db_name='db')</code>","text":"<p>check vgroups status in 10s after db vgroups status is changed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.ClusterComCheck.check_vgroups_status_with_offline","title":"<code>check_vgroups_status_with_offline(vgroup_numbers=2, db_replica=3, count_number=10, db_name='db')</code>","text":"<p>n nodes cluster, 3 replica database return 1, n leaders, stable status return 2, 0 &lt; num of leader &lt; n, stable status return 0, no leader, stable status return -1, Elections not yet completed, unstable status</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.ClusterDnodes","title":"<code>ClusterDnodes</code>","text":"<p>rewrite TDDnodes and make MyDdnodes as TDDnodes child class</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.ConfigureyCluster","title":"<code>ConfigureyCluster</code>","text":"<p>This will create defined number of dnodes and create a cluster. at the same time, it will return TDDnodes list:  dnodes,</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom","title":"<code>TDCom</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.cal_watermark_window_close_interval_endts","title":"<code>cal_watermark_window_close_interval_endts(start_ts, interval, watermark=None)</code>","text":"<p>cal endts for close window</p> <p>Parameters:</p> Name Type Description Default <code>start_ts</code> <code>epoch time</code> <p>self.date_time</p> required <code>interval</code> <code>int</code> <p>[s]</p> required <code>watermark</code> <code>int</code> <p>[s]. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>_type_</code> <p>description</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.cal_watermark_window_close_session_endts","title":"<code>cal_watermark_window_close_session_endts(start_ts, watermark=None, session=None)</code>","text":"<p>cal endts for close window</p> <p>Parameters:</p> Name Type Description Default <code>start_ts</code> <code>epoch time</code> <p>self.date_time</p> required <code>watermark</code> <code>int</code> <p>session. Defaults to None.</p> <code>None</code> <code>session</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>int</code> <p>as followed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.cast_query_data","title":"<code>cast_query_data(query_data)</code>","text":"<p>cast query-result for existed-stb</p> <p>Parameters:</p> Name Type Description Default <code>query_data</code> <code>list</code> <p>query data list</p> required <p>Returns:</p> Name Type Description <code>list</code> <p>new list after cast</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.check_query_data","title":"<code>check_query_data(sql1, sql2, sorted=False, fill_value=None, tag_value_list=None, defined_tag_count=None, partition=True, use_exist_stb=False, subtable=None, reverse_check=False)</code>","text":"<p>confirm query result</p> <p>Parameters:</p> Name Type Description Default <code>sql1</code> <code>str</code> <p>select ....</p> required <code>sql2</code> <code>str</code> <p>select ....</p> required <code>sorted</code> <code>bool</code> <p>if sort result list. Defaults to False.</p> <code>False</code> <code>fill_value</code> <code>str</code> <p>fill. Defaults to None.</p> <code>None</code> <code>tag_value_list</code> <code>list</code> <p>Defaults to None.</p> <code>None</code> <code>defined_tag_count</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <code>partition</code> <code>bool</code> <p>Defaults to True.</p> <code>True</code> <code>use_exist_stb</code> <code>bool</code> <p>Defaults to False.</p> <code>False</code> <code>subtable</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>reverse_check</code> <code>bool</code> <p>not equal. Defaults to False.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>bool</code> <p>False if failed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.check_stream","title":"<code>check_stream(sql1, sql2, expected_count, max_delay=None)</code>","text":"<p>confirm stream</p> <p>Parameters:</p> Name Type Description Default <code>sql1</code> <code>str</code> <p>select ...</p> required <code>sql2</code> <code>str</code> <p>select ...</p> required <code>expected_count</code> <code>int</code> <p>expected_count</p> required <code>max_delay</code> <code>int</code> <p>max_delay value. Defaults to None.</p> <code>None</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.check_stream_field_type","title":"<code>check_stream_field_type(sql, input_function)</code>","text":"<p>confirm stream field</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>input sql</p> required <code>input_function</code> <code>str</code> <p>scalar</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.check_stream_res","title":"<code>check_stream_res(sql, expected_res, max_delay)</code>","text":"<p>confirm stream result</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>select ...</p> required <code>expected_res</code> <code>str</code> <p>expected result</p> required <code>max_delay</code> <code>int</code> <p>max_delay value</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>False if failed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.check_stream_task_status","title":"<code>check_stream_task_status(stream_name, vgroups, stream_timeout=0, check_wal_info=True)</code>","text":"<p>check stream status</p> <p>Parameters:</p> Name Type Description Default <code>stream_name</code> <code>str</code> <p>stream_name</p> required <code>vgroups</code> <code>int</code> <p>vgroups</p> required <p>Returns:     str: status</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.cleanTb","title":"<code>cleanTb(type='taosc', dbname='db')</code>","text":"<p>type is taosc or restful</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.clean_env","title":"<code>clean_env()</code>","text":"<p>drop all streams and databases</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.create_stream","title":"<code>create_stream(stream_name, des_table, source_sql, trigger_mode=None, watermark=None, max_delay=None, ignore_expired=None, ignore_update=None, subtable_value=None, fill_value=None, fill_history_value=None, stb_field_name_value=None, tag_value=None, use_exist_stb=False, use_except=False)</code>","text":"<p>create_stream</p> <p>Parameters:</p> Name Type Description Default <code>stream_name</code> <code>str</code> <p>stream_name</p> required <code>des_table</code> <code>str</code> <p>target stable</p> required <code>source_sql</code> <code>str</code> <p>stream sql</p> required <code>trigger_mode</code> <code>str</code> <p>at_once/window_close/max_delay. Defaults to None.</p> <code>None</code> <code>watermark</code> <code>str</code> <p>watermark time. Defaults to None.</p> <code>None</code> <code>max_delay</code> <code>str</code> <p>max_delay time. Defaults to None.</p> <code>None</code> <code>ignore_expired</code> <code>int</code> <p>ignore expired data. Defaults to None.</p> <code>None</code> <code>ignore_update</code> <code>int</code> <p>ignore update data. Defaults to None.</p> <code>None</code> <code>subtable_value</code> <code>str</code> <p>subtable. Defaults to None.</p> <code>None</code> <code>fill_value</code> <code>str</code> <p>fill. Defaults to None.</p> <code>None</code> <code>fill_history_value</code> <code>int</code> <p>0/1. Defaults to None.</p> <code>None</code> <code>stb_field_name_value</code> <code>str</code> <p>existed stb. Defaults to None.</p> <code>None</code> <code>tag_value</code> <code>str</code> <p>custom tag. Defaults to None.</p> <code>None</code> <code>use_exist_stb</code> <code>bool</code> <p>use existed stb tag. Defaults to False.</p> <code>False</code> <code>use_except</code> <code>bool</code> <p>Exception tag. Defaults to False.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>str</code> <p>stream</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.drop_all_db","title":"<code>drop_all_db()</code>","text":"<p>drop all databases</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.drop_all_streams","title":"<code>drop_all_streams()</code>","text":"<p>drop all streams</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.drop_db","title":"<code>drop_db(dbname='test')</code>","text":"<p>drop a db</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to \"test\".</p> <code>'test'</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.float_handle","title":"<code>float_handle(input_list)</code>","text":"<p>float list elem</p> <p>Parameters:</p> Name Type Description Default <code>input_list</code> <code>list</code> <p>input value list</p> required <p>Returns:</p> Name Type Description <code>_type_</code> <p>float list</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.genTs","title":"<code>genTs(precision='ms', ts='', protype='taosc', ns_tag=None)</code>","text":"<p>generate ts</p> <p>Parameters:</p> Name Type Description Default <code>precision</code> <code>str</code> <p>db precision. Defaults to \"ms\".</p> <code>'ms'</code> <code>ts</code> <code>str</code> <p>input ts. Defaults to \"\".</p> <code>''</code> <code>protype</code> <code>str</code> <p>\"taosc\" or \"restful\". Defaults to \"taosc\".</p> <code>'taosc'</code> <code>ns_tag</code> <code>_type_</code> <p>use ns. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <p>timestamp, datetime: timestamp and datetime</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.gen_tag_col_str","title":"<code>gen_tag_col_str(gen_type, data_type, count)</code>","text":"<p>gen multi tags or cols by gen_type</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.getLongName","title":"<code>getLongName(len, mode='mixed')</code>","text":"<p>generate long name mode could be numbers/letters/letters_mixed/mixed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.get_long_name","title":"<code>get_long_name(length=10, mode='letters')</code>","text":"<p>generate long name mode could be numbers/letters/letters_mixed/mixed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.get_timestamp_n_days_later","title":"<code>get_timestamp_n_days_later(n=30)</code>","text":"<p>Get the timestamp of a date n days later from the current date.</p> <p>Parameters:</p> Name Type Description Default <code>n</code> <code>int</code> <p>Number of days to add to the current date. Default is 30.</p> <code>30</code> <p>Returns:</p> Name Type Description <code>int</code> <p>Timestamp of the date n days later, in milliseconds.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.pause_stream","title":"<code>pause_stream(stream_name, if_exist=True, if_not_exist=False)</code>","text":"<p>pause_stream</p> <p>Parameters:</p> Name Type Description Default <code>stream_name</code> <code>str</code> <p>stream_name</p> required <code>if_exist</code> <code>bool</code> <p>Defaults to True.</p> <code>True</code> <code>if_not_exist</code> <code>bool</code> <p>Defaults to False.</p> <code>False</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.prepare_data","title":"<code>prepare_data(interval=None, watermark=None, session=None, state_window=None, state_window_max=127, interation=3, range_count=None, precision='ms', fill_history_value=0, ext_stb=None, custom_col_index=None, col_value_type='random')</code>","text":"<p>prepare stream data</p> <p>Parameters:</p> Name Type Description Default <code>interval</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <code>watermark</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <code>session</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <code>state_window</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>state_window_max</code> <code>int</code> <p>Defaults to 127.</p> <code>127</code> <code>interation</code> <code>int</code> <p>Defaults to 3.</p> <code>3</code> <code>range_count</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <code>precision</code> <code>str</code> <p>Defaults to \"ms\".</p> <code>'ms'</code> <code>fill_history_value</code> <code>int</code> <p>Defaults to 0.</p> <code>0</code> <code>ext_stb</code> <code>bool</code> <p>Defaults to None.</p> <code>None</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.resume_stream","title":"<code>resume_stream(stream_name, if_exist=True, if_not_exist=False, ignore_untreated=False)</code>","text":"<p>resume_stream</p> <p>Parameters:</p> Name Type Description Default <code>stream_name</code> <code>str</code> <p>stream_name</p> required <code>if_exist</code> <code>bool</code> <p>Defaults to True.</p> <code>True</code> <code>if_not_exist</code> <code>bool</code> <p>Defaults to False.</p> <code>False</code> <code>ignore_untreated</code> <code>bool</code> <p>Defaults to False.</p> <code>False</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.round_handle","title":"<code>round_handle(input_list)</code>","text":"<p>round list elem</p> <p>Parameters:</p> Name Type Description Default <code>input_list</code> <code>list</code> <p>input value list</p> required <p>Returns:</p> Name Type Description <code>_type_</code> <p>round list</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.screateDb","title":"<code>screateDb(dbname='test', drop_db=True, **kwargs)</code>","text":"<p>create database</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to \"test\".</p> <code>'test'</code> <code>drop_db</code> <code>bool</code> <p>Defaults to True.</p> <code>True</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.screate_ctable","title":"<code>screate_ctable(dbname=None, stbname=None, ctbname='ctb', use_name='table', tag_elm_list=None, ts_value=None, count=1, default_varchar_datatype='letters', default_nchar_datatype='letters', default_ctbname_prefix='ctb', default_ctbname_index_start_num=1, **kwargs)</code>","text":"<p>summary</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>stbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>ctbname</code> <code>str</code> <p>Defaults to \"ctb\".</p> <code>'ctb'</code> <code>use_name</code> <code>str</code> <p>Defaults to \"table\".</p> <code>'table'</code> <code>tag_elm_list</code> <code>list</code> <p>use for sgen_tag_type_str(), Defaults to None.</p> <code>None</code> <code>ts_value</code> <code>timestamp</code> <p>Defaults to None.</p> <code>None</code> <code>count</code> <code>int</code> <p>ctb count, Defaults to 1.</p> <code>1</code> <code>default_varchar_datatype</code> <code>str</code> <p>Defaults to \"letters\".</p> <code>'letters'</code> <code>default_nchar_datatype</code> <code>str</code> <p>Defaults to \"letters\".</p> <code>'letters'</code> <code>default_ctbname_prefix</code> <code>str</code> <p>Defaults to \"ctb\".</p> <code>'ctb'</code> <code>default_ctbname_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.screate_stable","title":"<code>screate_stable(dbname=None, stbname='stb', use_name='table', column_elm_list=None, tag_elm_list=None, need_tagts=False, count=1, default_stbname_prefix='stb', default_stbname_index_start_num=1, default_column_index_start_num=1, default_tag_index_start_num=1, **kwargs)</code>","text":"<p>summary</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>stbname</code> <code>str</code> <p>Defaults to \"stb\".</p> <code>'stb'</code> <code>use_name</code> <code>str</code> <p>stable/table, Defaults to \"table\".</p> <code>'table'</code> <code>column_elm_list</code> <code>list</code> <p>use for sgen_column_type_str(), Defaults to None.</p> <code>None</code> <code>tag_elm_list</code> <code>list</code> <p>use for sgen_tag_type_str(), Defaults to None.</p> <code>None</code> <code>need_tagts</code> <code>bool</code> <p>tag use timestamp, Defaults to False.</p> <code>False</code> <code>count</code> <code>int</code> <p>stable count, Defaults to 1.</p> <code>1</code> <code>default_stbname_prefix</code> <code>str</code> <p>Defaults to \"stb\".</p> <code>'stb'</code> <code>default_stbname_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code> <code>default_column_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code> <code>default_tag_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.screate_table","title":"<code>screate_table(dbname=None, tbname='tb', use_name='table', column_elm_list=None, count=1, default_tbname_prefix='tb', default_tbname_index_start_num=1, default_column_index_start_num=1, **kwargs)</code>","text":"<p>create ctable</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>tbname</code> <code>str</code> <p>Defaults to \"tb\".</p> <code>'tb'</code> <code>use_name</code> <code>str</code> <p>Defaults to \"table\".</p> <code>'table'</code> <code>column_elm_list</code> <code>list</code> <p>Defaults to None.</p> <code>None</code> <code>count</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code> <code>default_tbname_prefix</code> <code>str</code> <p>Defaults to \"tb\".</p> <code>'tb'</code> <code>default_tbname_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code> <code>default_column_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.sdelete_rows","title":"<code>sdelete_rows(dbname=None, tbname=None, start_ts=None, end_ts=None, ts_key=None)</code>","text":"<p>delete rows</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>tbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>start_ts</code> <code>timestamp</code> <p>range start. Defaults to None.</p> <code>None</code> <code>end_ts</code> <code>timestamp</code> <p>range end. Defaults to None.</p> <code>None</code> <code>ts_key</code> <code>str</code> <p>timestamp column name. Defaults to None.</p> <code>None</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.sgen_column_type_str","title":"<code>sgen_column_type_str(column_elm_list)</code>","text":"<p>generage column type str</p> <p>Parameters:</p> Name Type Description Default <code>column_elm_list</code> <code>list</code> <p>column_elm_list</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.sgen_column_value_list","title":"<code>sgen_column_value_list(column_elm_list, need_null, ts_value=None, additional_ts=None, custom_col_index=None, col_value_type=None, force_pk_val=None)</code>","text":"<p>summary</p> <p>Parameters:</p> Name Type Description Default <code>column_elm_list</code> <code>list</code> <p>gen_random_type_value()</p> required <code>need_null</code> <code>bool</code> <p>if insert null</p> required <code>ts_value</code> <code>timestamp</code> <p>Defaults to None.</p> <code>None</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.sgen_tag_type_str","title":"<code>sgen_tag_type_str(tag_elm_list)</code>","text":"<p>generage tag type str</p> <p>Parameters:</p> Name Type Description Default <code>tag_elm_list</code> <code>list</code> <p>tag_elm_list</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.sgen_tag_value_list","title":"<code>sgen_tag_value_list(tag_elm_list, ts_value=None)</code>","text":"<p>generage tag value str</p> <p>Parameters:</p> Name Type Description Default <code>tag_elm_list</code> <code>list</code> <p>description</p> required <code>ts_value</code> <code>timestamp</code> <p>Defaults to None.</p> <code>None</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.sinsert_rows","title":"<code>sinsert_rows(dbname=None, tbname=None, column_ele_list=None, ts_value=None, count=1, need_null=False, custom_col_index=None, col_value_type='random')</code>","text":"<p>insert rows</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>tbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>column_ele_list</code> <code>list</code> <p>Defaults to None.</p> <code>None</code> <code>ts_value</code> <code>timestamp</code> <p>Defaults to None.</p> <code>None</code> <code>count</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code> <code>need_null</code> <code>bool</code> <p>Defaults to False.</p> <code>False</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.str_ts_trans_bigint","title":"<code>str_ts_trans_bigint(str_ts)</code>","text":"<p>trans str ts to bigint</p> <p>Parameters:</p> Name Type Description Default <code>str_ts</code> <code>str</code> <p>human-date</p> required <p>Returns:</p> Name Type Description <code>bigint</code> <p>bigint-ts</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.time_cast","title":"<code>time_cast(time_value, split_symbol='+')</code>","text":"<p>cast bigint to timestamp</p> <p>Parameters:</p> Name Type Description Default <code>time_value</code> <code>bigint</code> <p>ts</p> required <code>split_symbol</code> <code>str</code> <p>split sympol. Defaults to \"+\".</p> <code>'+'</code> <p>Returns:</p> Name Type Description <code>_type_</code> <p>timestamp</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.trans_time_to_s","title":"<code>trans_time_to_s(runtime)</code>","text":"<p>trans time to s</p> <p>Parameters:</p> Name Type Description Default <code>runtime</code> <code>str</code> <p>1d/1h/1m...</p> required <p>Returns:</p> Name Type Description <code>int</code> <p>second</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.update_delete_history_data","title":"<code>update_delete_history_data(delete)</code>","text":"<p>update and delete history data</p> <p>Parameters:</p> Name Type Description Default <code>delete</code> <code>bool</code> <p>True/False</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDCom.update_json_file_replica","title":"<code>update_json_file_replica(json_file_path, new_replica_value, output_file_path=None)</code>","text":"<p>Read a JSON file, update the 'replica' value, and write the result back to a file.</p> <p>Parameters: json_file_path (str): The path to the original JSON file. new_replica_value (int): The new 'replica' value to be set. output_file_path (str, optional): The path to the output file where the updated JSON will be saved. If not provided, the original file will be overwritten.</p> <p>Returns: None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql","title":"<code>TDSql</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkAffectedRows","title":"<code>checkAffectedRows(expectAffectedRows)</code>","text":"<p>Checks if the number of affected rows from the last executed SQL statement matches the expected number of affected rows.</p> <p>Parameters:</p> Name Type Description Default <code>expectAffectedRows</code> <code>int</code> <p>The expected number of affected rows.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the number of affected rows does not match the expected number.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkAgg","title":"<code>checkAgg(sql, expectCnt)</code>","text":"<p>Executes an aggregate SQL query and checks if the result matches the expected count.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The aggregate SQL query to be executed.</p> required <code>expectCnt</code> <code>int</code> <p>The expected count from the aggregate query.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p> <code>SystemExit</code> <p>If the result of the aggregate query does not match the expected count.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkColNameList","title":"<code>checkColNameList(col_name_list, expect_col_name_list)</code>","text":"<p>Checks if the column names from the last query match the expected column names.</p> <p>Parameters:</p> Name Type Description Default <code>col_name_list</code> <code>list</code> <p>The list of column names from the last query.</p> required <code>expect_col_name_list</code> <code>list</code> <p>The list of expected column names.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the column names do not match the expected column names.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkCols","title":"<code>checkCols(expectCols)</code>","text":"<p>Checks if the number of columns fetched by the last query matches the expected number of columns.</p> <p>Parameters:</p> Name Type Description Default <code>expectCols</code> <code>int</code> <p>The expected number of columns.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the number of columns does not match the expected number.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkData","title":"<code>checkData(row, col, data, show=False)</code>","text":"<p>Checks if the data at the specified row and column matches the expected data.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index of the data to be checked.</p> required <code>col</code> <code>int</code> <p>The column index of the data to be checked.</p> required <code>data</code> <p>The expected data to be compared with.</p> required <code>show</code> <code>bool</code> <p>If True, logs a message when the check is successful. Defaults to False.</p> <code>False</code> <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the data at the specified row and column does not match the expected data.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkDataCsv","title":"<code>checkDataCsv(sql, csvfilePath)</code>","text":"<p>Executes a SQL query and checks if the result matches the expected data from a CSV file.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>csvfilePath</code> <code>str</code> <p>The path to the CSV file containing the expected data.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the CSV file path is invalid, the file is not found, there is an error reading the file, or if the sql result does not match the expected data from CSV file.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkDataCsvByLine","title":"<code>checkDataCsvByLine(sql, csvfilePath)</code>","text":"<p>Executes a SQL query and checks if the result matches the expected data from a CSV file line by line.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>csvfilePath</code> <code>str</code> <p>The path to the CSV file containing the expected data.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the CSV file path is invalid, the file is not found, there is an error reading the file,         or if the SQL result does not match the expected data from the CSV file.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkDataLoop","title":"<code>checkDataLoop(row, col, data, sql, loopCount, waitTime)</code>","text":"<p>Executes a SQL query in a loop and checks if the data at the specified row and column matches the expected data.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index of the data to be checked.</p> required <code>col</code> <code>int</code> <p>The column index of the data to be checked.</p> required <code>data</code> <p>The expected data to be compared with.</p> required <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>loopCount</code> <code>int</code> <p>The number of times to execute the SQL query.</p> required <code>waitTime</code> <code>int</code> <p>The time to wait (in seconds) between each execution.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p> <code>SystemExit</code> <p>If the data at the specified row and column does not match the expected data.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkDataMem","title":"<code>checkDataMem(sql, mem)</code>","text":"<p>Executes a SQL query and checks if the result matches the expected data.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>mem</code> <code>list</code> <p>The expected data, represented as a list of lists.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the expected data is not a list of lists, or if the SQL result does not match the expected data.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkDataMemByLine","title":"<code>checkDataMemByLine(sql, mem)</code>","text":"<p>Executes a SQL query and checks if the result matches the expected data (Same as checkDataMem).</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>mem</code> <code>list</code> <p>The expected data, represented as a list of lists.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the expected data is not a list of lists, or if the SQL result does not match the expected data.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkDataNoExist","title":"<code>checkDataNoExist(row, col, data)</code>","text":"<p>Checks if the data at the specified row and column matches the expected data without exiting the program.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index of the data to be checked.</p> required <code>col</code> <code>int</code> <p>The column index of the data to be checked.</p> required <code>data</code> <p>The expected data to be compared with.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the data matches the expected data, otherwise False.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkDataType","title":"<code>checkDataType(row, col, dataType)</code>","text":"<p>Checks if the data type at the specified row and column matches the expected data type.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index of the data to be checked.</p> required <code>col</code> <code>int</code> <p>The column index of the data to be checked.</p> required <code>dataType</code> <code>str</code> <p>The expected data type.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the data type matches the expected data type, otherwise False.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the specified row or column index is out of range.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkEqual","title":"<code>checkEqual(elm, expect_elm)</code>","text":"<p>Checks if the given element is equal to the expected element.</p> <p>Parameters:</p> Name Type Description Default <code>elm</code> <p>The element to be checked.</p> required <code>expect_elm</code> <p>The expected element to be compared with.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the element does not match the expected element.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkFirstValue","title":"<code>checkFirstValue(sql, expect)</code>","text":"<p>Executes a SQL query and checks if the first value in the result matches the expected value.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>expect</code> <p>The expected value of the first result.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p> <code>SystemExit</code> <p>If the first value in the result does not match the expected value.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkNotEqual","title":"<code>checkNotEqual(elm, expect_elm)</code>","text":"<p>Checks if the given element is not equal to the expected element.</p> <p>Parameters:</p> Name Type Description Default <code>elm</code> <p>The element to be checked.</p> required <code>expect_elm</code> <p>The expected element to be compared with.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the element matches the expected element.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkRowCol","title":"<code>checkRowCol(row, col)</code>","text":"<p>Checks if the specified row and column indices are within the range of the last query result.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index to be checked.</p> required <code>col</code> <code>int</code> <p>The column index to be checked.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the specified row or column index is out of range.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkRowColNoExist","title":"<code>checkRowColNoExist(row, col)</code>","text":"<p>Checks if the specified row and column indices are within the range of the last query result without exiting the program.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index to be checked.</p> required <code>col</code> <code>int</code> <p>The column index to be checked.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the specified row and column indices are within the range, otherwise False.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkRows","title":"<code>checkRows(expectedRows)</code>","text":"<p>Checks if the number of rows fetched by the last query matches the expected number of rows.</p> <p>Parameters:</p> Name Type Description Default <code>expectedRows</code> <code>int</code> <p>The expected number of rows.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the number of rows matches the expected number, otherwise it exits the program.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the number of rows does not match the expected number.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkRows_not_exited","title":"<code>checkRows_not_exited(expectedRows)</code>","text":"<pre><code>Check if the query rows is equal to the expected rows\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>expectedRows</code> <p>The expected number of rows.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>Returns True if the actual number of rows matches the expected number, otherwise returns False.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkRows_range","title":"<code>checkRows_range(excepte_row_list)</code>","text":"<p>Checks if the number of rows fetched by the last query is within the expected range.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>excepte_row_list</code> <code>list</code> <p>A list of expected row counts.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the number of rows is within the expected range, otherwise it exits the program.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the number of rows is not within the expected range.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.checkSameColumn","title":"<code>checkSameColumn(c1, c2)</code>","text":"<p>Checks if the values in two specified columns are the same for all rows in the last query result.</p> <p>Parameters:</p> Name Type Description Default <code>c1</code> <code>int</code> <p>The index of the first column to be checked.</p> required <code>c2</code> <code>int</code> <p>The index of the second column to be checked.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the values in the specified columns are not the same for any row.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.close","title":"<code>close()</code>","text":"<p>Closes the cursor.</p> <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.error","title":"<code>error(sql, expectedErrno=None, expectErrInfo=None, fullMatched=True, show=False)</code>","text":"<p>Executes a SQL statement and checks for expected errors.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL statement to be executed.</p> required <code>expectedErrno</code> <code>int</code> <p>The expected error number. Defaults to None.</p> <code>None</code> <code>expectErrInfo</code> <code>str</code> <p>The expected error information. Defaults to None.</p> <code>None</code> <code>fullMatched</code> <code>bool</code> <p>If True, checks for exact matches of the expected error information. Defaults to True.</p> <code>True</code> <code>show</code> <code>bool</code> <p>If True, the SQL statement will be logged before execution. Defaults to False.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>str</code> <p>The error information if an error occurs.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the expected error does not occur or if the error information does not match the expected information.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.errors","title":"<code>errors(sql_list, expected_error_id_list=None, expected_error_info_list=None)</code>","text":"<p>Executes a list of SQL queries and checks for expected errors.</p> <p>Parameters:</p> Name Type Description Default <code>sql_list</code> <code>list</code> <p>The list of SQL queries to be executed.</p> required <code>expected_error_id_list</code> <code>list</code> <p>The list of expected error numbers corresponding to each SQL query. Defaults to None.</p> <code>None</code> <code>expected_error_info_list</code> <code>list</code> <p>The list of expected error information corresponding to each SQL query. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the SQL list is empty, if the execution of any SQL query fails, if the expected error does not occur, or if the error information does not match the expected information.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.execute","title":"<code>execute(sql, queryTimes=10, show=False)</code>","text":"<p>Executes a SQL statement.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL statement to be executed.</p> required <code>queryTimes</code> <code>int</code> <p>The number of times to attempt the execution in case of failure. Defaults to 10.</p> <code>10</code> <code>show</code> <code>bool</code> <p>If True, the SQL statement will be logged before execution. Defaults to False.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>int</code> <p>The number of affected rows.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the execution fails after the specified number of attempts.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.executeTimes","title":"<code>executeTimes(sql, times)</code>","text":"<p>Executes a SQL statement a specified number of times.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL statement to be executed.</p> required <code>times</code> <code>int</code> <p>The number of times to execute the SQL statement.</p> required <p>Returns:</p> Name Type Description <code>int</code> <p>The number of affected rows from the last execution.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.executes","title":"<code>executes(sqls, queryTimes=30, show=False)</code>","text":"<p>Executes a list of SQL statements.</p> <p>Parameters:</p> Name Type Description Default <code>sqls</code> <code>list</code> <p>The list of SQL statements to be executed.</p> required <code>queryTimes</code> <code>int</code> <p>The number of times to attempt the execution in case of failure. Defaults to 30.</p> <code>30</code> <code>show</code> <code>bool</code> <p>If True, each SQL statement will be logged before execution. Defaults to False.</p> <code>False</code> <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the execution of any SQL statement fails after the specified number of attempts.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.getColData","title":"<code>getColData(col)</code>","text":"<p>Retrieves all data from the specified column in the last query result.</p> <p>Parameters:</p> Name Type Description Default <code>col</code> <code>int</code> <p>The column index of the data to be retrieved.</p> required <p>Returns:</p> Name Type Description <code>list</code> <p>A list containing all data from the specified column.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.getColNameList","title":"<code>getColNameList(sql, col_tag=None)</code>","text":"<p>Executes a SQL query and retrieves the column names and optionally the column types.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>col_tag</code> <code>optional</code> <p>If provided, the method will return both column names and column types. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>list</code> <p>A list containing the column names.</p> <code>tuple</code> <p>A tuple containing two lists - the column names and the column types, if col_tag is provided.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.getData","title":"<code>getData(row, col)</code>","text":"<p>Retrieves the data at the specified row and column from the last query result.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index of the data to be retrieved.</p> required <code>col</code> <code>int</code> <p>The column index of the data to be retrieved.</p> required <p>Returns:</p> Type Description <p>The data at the specified row and column.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the specified row or column is out of range.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.getFirstValue","title":"<code>getFirstValue(sql)</code>","text":"<p>Executes a SQL query and retrieves the first value in the result.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <p>Returns:</p> Type Description <p>The first value in the result.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.getResult","title":"<code>getResult(sql)</code>","text":"<p>Executes a SQL query and fetches the results.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <p>Returns:</p> Name Type Description <code>list</code> <p>The fetched results.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.getRows","title":"<code>getRows()</code>","text":"<p>Retrieves the number of rows fetched by the last query.</p> <p>Returns:</p> Name Type Description <code>int</code> <p>The number of rows fetched by the last query.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.getVariable","title":"<code>getVariable(search_attr)</code>","text":"<p>Retrieves the value of a specified variable from the database.</p> <p>Parameters:</p> Name Type Description Default <code>search_attr</code> <code>str</code> <p>The name of the variable to be retrieved.</p> required <p>Returns:</p> Name Type Description <code>tuple</code> <p>A tuple containing the value of the specified variable and the list of all variables.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.get_times","title":"<code>get_times(time_str, precision='ms')</code>","text":"<p>Converts a time string to a timestamp based on the specified precision.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>time_str</code> <code>str</code> <p>The time string to be converted. The string should end with a character indicating the time unit (e.g., 's' for seconds, 'm' for minutes).</p> required <code>precision</code> <code>str</code> <p>The precision of the timestamp. Can be \"ms\" (milliseconds), \"us\" (microseconds), or \"ns\" (nanoseconds). Defaults to \"ms\".</p> <code>'ms'</code> <p>Returns:</p> Name Type Description <code>int</code> <p>The timestamp in the specified precision.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the time string does not end with a valid time unit character or if the precision is not valid.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.get_type","title":"<code>get_type(col)</code>","text":"<p>Retrieves the data type of the specified column in the last query result.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>col</code> <code>int</code> <p>The column index for which the data type is to be retrieved.</p> required <p>Returns:</p> Name Type Description <code>str</code> <p>The data type of the specified column.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.init","title":"<code>init(cursor, log=False)</code>","text":"<p>Initializes the TDSql instance with a database cursor and optionally enables logging.</p> <p>Parameters:</p> Name Type Description Default <code>cursor</code> <p>The database cursor to be used for executing SQL queries.</p> required <code>log</code> <code>bool</code> <p>If True, enables logging of SQL statements to a file. Defaults to False.</p> <code>False</code> <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.is_err_sql","title":"<code>is_err_sql(sql)</code>","text":"<p>Executes a SQL statement and checks if it results in an error.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL statement to be executed.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the SQL statement results in an error, False otherwise.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.prepare","title":"<code>prepare(dbname='db', drop=True, **kwargs)</code>","text":"<p>Prepares the database by optionally dropping it if it exists, creating it, and setting it as the active database.</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>The name of the database to be prepared. Defaults to \"db\".</p> <code>'db'</code> <code>drop</code> <code>bool</code> <p>If True, drops the database if it exists before creating it. Defaults to True.</p> <code>True</code> <code>**kwargs</code> <p>Additional keyword arguments to be included in the database creation statement. If duration is not provided, it defaults to 100.</p> <code>{}</code> <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.query","title":"<code>query(sql, row_tag=None, queryTimes=10, count_expected_res=None, show=False)</code>","text":"<p>Executes a SQL query and fetches the results.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>row_tag</code> <code>optional</code> <p>If provided, the method will return the fetched results. Defaults to None.</p> <code>None</code> <code>queryTimes</code> <code>int</code> <p>The number of times to attempt the query in case of failure. Defaults to 10.</p> <code>10</code> <code>count_expected_res</code> <code>optional</code> <p>If provided, the method will repeatedly execute the query until the first result matches this value or the queryTimes limit is reached. Defaults to None.</p> <code>None</code> <code>show</code> <code>bool</code> <p>If True, the SQL statement will be logged before execution. Defaults to False.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>int</code> <p>The number of rows fetched if row_tag is not provided.</p> <code>list</code> <p>The fetched results if row_tag is provided.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query fails after the specified number of attempts.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.queryAndCheckResult","title":"<code>queryAndCheckResult(sql_list, expect_result_list)</code>","text":"<p>Executes a list of SQL queries and checks the results against the expected results.</p> <p>Parameters:</p> Name Type Description Default <code>sql_list</code> <code>list</code> <p>The list of SQL queries to be executed.</p> required <code>expect_result_list</code> <code>list</code> <p>The list of expected results corresponding to each SQL query.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the execution of any SQL query fails or if the results do not match the expected results.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TDSql.waitedQuery","title":"<code>waitedQuery(sql, expectedRows, timeout)</code>","text":"<p>Executes a SQL query and waits until the expected number of rows is retrieved or the timeout is reached.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>expectedRows</code> <code>int</code> <p>The expected number of rows to be retrieved.</p> required <code>timeout</code> <code>int</code> <p>The maximum time to wait (in seconds) for the expected number of rows to be retrieved.</p> required <p>Returns:</p> Name Type Description <code>tuple</code> <p>A tuple containing the number of rows retrieved and the time taken (in seconds).</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TaosKeeper","title":"<code>TaosKeeper</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TaosKeeper.cfg","title":"<code>cfg(option, value)</code>","text":"<p>add param option and value to cfg file</p> <p>Parameters:</p> Name Type Description Default <code>option</code> <p>str, param name</p> required <code>value</code> <p>str, param value</p> required <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TaosKeeper.start","title":"<code>start()</code>","text":"<p>start taoskeeper process.</p> <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TaosKeeper.stop","title":"<code>stop(force_kill=False)</code>","text":"<p>stop taoskeeper process.</p> <p>Parameters:</p> Name Type Description Default <code>force_kill</code> <p>bool, whether to force kill the process default: False if True, use kill -9 if False, use kill -15</p> <code>False</code> <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.TaosKeeper.update_cfg","title":"<code>update_cfg(update_dict)</code>","text":"<p>update taoskeeper cfg file</p> <p>Parameters:</p> Name Type Description Default <code>update_dict</code> <code>dict</code> <p>dict, update dict example: {\"log\": {\"path\": \"/var/log/taos\"}}</p> required <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.srvCtl","title":"<code>srvCtl</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.srvCtl.clusterRootPath","title":"<code>clusterRootPath()</code>","text":"<p>Gets the root path of the cluster.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>The root path of the cluster.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.srvCtl.dnodeCfgPath","title":"<code>dnodeCfgPath(idx)</code>","text":"<p>Gets the configuration path for a specific dnode.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the dnode.</p> required <p>Returns:</p> Name Type Description <code>str</code> <p>The configuration path for the dnode.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.srvCtl.dnodeDataFiles","title":"<code>dnodeDataFiles(idx)</code>","text":"<p>Gets the data files for a specific dnode.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the dnode.</p> required <p>Returns:</p> Name Type Description <code>list</code> <p>A list of data files for the dnode.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.srvCtl.dnodeStart","title":"<code>dnodeStart(idx)</code>","text":"<p>Starts a dnode.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the dnode to start.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the dnode was started successfully, False otherwise.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.srvCtl.dnodeStop","title":"<code>dnodeStop(idx)</code>","text":"<p>Stops a dnode.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the dnode to stop.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the dnode was stopped successfully, False otherwise.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.srvCtl.dnodeStopAll","title":"<code>dnodeStopAll()</code>","text":"<p>Stops all dnodes.</p> <p>Returns:</p> Name Type Description <code>bool</code> <p>True if all dnodes were stopped successfully, False otherwise.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#__init__.srvCtl.taosdFile","title":"<code>taosdFile(idx)</code>","text":"<p>Gets the path to the taosd file for a specific dnode.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the dnode.</p> required <p>Returns:</p> Name Type Description <code>str</code> <p>The path to the taosd file.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#before_test","title":"<code>before_test</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#before_test.BeforeTest","title":"<code>BeforeTest</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#before_test.BeforeTest.create_database","title":"<code>create_database(request, db_name, host, port)</code>","text":"<p>\u521b\u5efamodule\u7ea7\u522b\u7684\u6570\u636e\u5e93</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#before_test.BeforeTest.deploy_taos","title":"<code>deploy_taos(yaml_file, mnodes_num=1)</code>","text":"<p>get env directory from request; use yaml file for tostest run;</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#boundary","title":"<code>boundary</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#clusterCommonCheck","title":"<code>clusterCommonCheck</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#clusterCommonCheck.ClusterComCheck","title":"<code>ClusterComCheck</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#clusterCommonCheck.ClusterComCheck.check_vgroups_status","title":"<code>check_vgroups_status(vgroup_numbers=2, db_replica=3, count_number=10, db_name='db')</code>","text":"<p>check vgroups status in 10s after db vgroups status is changed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#clusterCommonCheck.ClusterComCheck.check_vgroups_status_with_offline","title":"<code>check_vgroups_status_with_offline(vgroup_numbers=2, db_replica=3, count_number=10, db_name='db')</code>","text":"<p>n nodes cluster, 3 replica database return 1, n leaders, stable status return 2, 0 &lt; num of leader &lt; n, stable status return 0, no leader, stable status return -1, Elections not yet completed, unstable status</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common","title":"<code>common</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom","title":"<code>TDCom</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.cal_watermark_window_close_interval_endts","title":"<code>cal_watermark_window_close_interval_endts(start_ts, interval, watermark=None)</code>","text":"<p>cal endts for close window</p> <p>Parameters:</p> Name Type Description Default <code>start_ts</code> <code>epoch time</code> <p>self.date_time</p> required <code>interval</code> <code>int</code> <p>[s]</p> required <code>watermark</code> <code>int</code> <p>[s]. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>_type_</code> <p>description</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.cal_watermark_window_close_session_endts","title":"<code>cal_watermark_window_close_session_endts(start_ts, watermark=None, session=None)</code>","text":"<p>cal endts for close window</p> <p>Parameters:</p> Name Type Description Default <code>start_ts</code> <code>epoch time</code> <p>self.date_time</p> required <code>watermark</code> <code>int</code> <p>session. Defaults to None.</p> <code>None</code> <code>session</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>int</code> <p>as followed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.cast_query_data","title":"<code>cast_query_data(query_data)</code>","text":"<p>cast query-result for existed-stb</p> <p>Parameters:</p> Name Type Description Default <code>query_data</code> <code>list</code> <p>query data list</p> required <p>Returns:</p> Name Type Description <code>list</code> <p>new list after cast</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.check_query_data","title":"<code>check_query_data(sql1, sql2, sorted=False, fill_value=None, tag_value_list=None, defined_tag_count=None, partition=True, use_exist_stb=False, subtable=None, reverse_check=False)</code>","text":"<p>confirm query result</p> <p>Parameters:</p> Name Type Description Default <code>sql1</code> <code>str</code> <p>select ....</p> required <code>sql2</code> <code>str</code> <p>select ....</p> required <code>sorted</code> <code>bool</code> <p>if sort result list. Defaults to False.</p> <code>False</code> <code>fill_value</code> <code>str</code> <p>fill. Defaults to None.</p> <code>None</code> <code>tag_value_list</code> <code>list</code> <p>Defaults to None.</p> <code>None</code> <code>defined_tag_count</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <code>partition</code> <code>bool</code> <p>Defaults to True.</p> <code>True</code> <code>use_exist_stb</code> <code>bool</code> <p>Defaults to False.</p> <code>False</code> <code>subtable</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>reverse_check</code> <code>bool</code> <p>not equal. Defaults to False.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>bool</code> <p>False if failed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.check_stream","title":"<code>check_stream(sql1, sql2, expected_count, max_delay=None)</code>","text":"<p>confirm stream</p> <p>Parameters:</p> Name Type Description Default <code>sql1</code> <code>str</code> <p>select ...</p> required <code>sql2</code> <code>str</code> <p>select ...</p> required <code>expected_count</code> <code>int</code> <p>expected_count</p> required <code>max_delay</code> <code>int</code> <p>max_delay value. Defaults to None.</p> <code>None</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.check_stream_field_type","title":"<code>check_stream_field_type(sql, input_function)</code>","text":"<p>confirm stream field</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>input sql</p> required <code>input_function</code> <code>str</code> <p>scalar</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.check_stream_res","title":"<code>check_stream_res(sql, expected_res, max_delay)</code>","text":"<p>confirm stream result</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>select ...</p> required <code>expected_res</code> <code>str</code> <p>expected result</p> required <code>max_delay</code> <code>int</code> <p>max_delay value</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>False if failed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.check_stream_task_status","title":"<code>check_stream_task_status(stream_name, vgroups, stream_timeout=0, check_wal_info=True)</code>","text":"<p>check stream status</p> <p>Parameters:</p> Name Type Description Default <code>stream_name</code> <code>str</code> <p>stream_name</p> required <code>vgroups</code> <code>int</code> <p>vgroups</p> required <p>Returns:     str: status</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.cleanTb","title":"<code>cleanTb(type='taosc', dbname='db')</code>","text":"<p>type is taosc or restful</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.clean_env","title":"<code>clean_env()</code>","text":"<p>drop all streams and databases</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.create_stream","title":"<code>create_stream(stream_name, des_table, source_sql, trigger_mode=None, watermark=None, max_delay=None, ignore_expired=None, ignore_update=None, subtable_value=None, fill_value=None, fill_history_value=None, stb_field_name_value=None, tag_value=None, use_exist_stb=False, use_except=False)</code>","text":"<p>create_stream</p> <p>Parameters:</p> Name Type Description Default <code>stream_name</code> <code>str</code> <p>stream_name</p> required <code>des_table</code> <code>str</code> <p>target stable</p> required <code>source_sql</code> <code>str</code> <p>stream sql</p> required <code>trigger_mode</code> <code>str</code> <p>at_once/window_close/max_delay. Defaults to None.</p> <code>None</code> <code>watermark</code> <code>str</code> <p>watermark time. Defaults to None.</p> <code>None</code> <code>max_delay</code> <code>str</code> <p>max_delay time. Defaults to None.</p> <code>None</code> <code>ignore_expired</code> <code>int</code> <p>ignore expired data. Defaults to None.</p> <code>None</code> <code>ignore_update</code> <code>int</code> <p>ignore update data. Defaults to None.</p> <code>None</code> <code>subtable_value</code> <code>str</code> <p>subtable. Defaults to None.</p> <code>None</code> <code>fill_value</code> <code>str</code> <p>fill. Defaults to None.</p> <code>None</code> <code>fill_history_value</code> <code>int</code> <p>0/1. Defaults to None.</p> <code>None</code> <code>stb_field_name_value</code> <code>str</code> <p>existed stb. Defaults to None.</p> <code>None</code> <code>tag_value</code> <code>str</code> <p>custom tag. Defaults to None.</p> <code>None</code> <code>use_exist_stb</code> <code>bool</code> <p>use existed stb tag. Defaults to False.</p> <code>False</code> <code>use_except</code> <code>bool</code> <p>Exception tag. Defaults to False.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>str</code> <p>stream</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.drop_all_db","title":"<code>drop_all_db()</code>","text":"<p>drop all databases</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.drop_all_streams","title":"<code>drop_all_streams()</code>","text":"<p>drop all streams</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.drop_db","title":"<code>drop_db(dbname='test')</code>","text":"<p>drop a db</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to \"test\".</p> <code>'test'</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.float_handle","title":"<code>float_handle(input_list)</code>","text":"<p>float list elem</p> <p>Parameters:</p> Name Type Description Default <code>input_list</code> <code>list</code> <p>input value list</p> required <p>Returns:</p> Name Type Description <code>_type_</code> <p>float list</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.genTs","title":"<code>genTs(precision='ms', ts='', protype='taosc', ns_tag=None)</code>","text":"<p>generate ts</p> <p>Parameters:</p> Name Type Description Default <code>precision</code> <code>str</code> <p>db precision. Defaults to \"ms\".</p> <code>'ms'</code> <code>ts</code> <code>str</code> <p>input ts. Defaults to \"\".</p> <code>''</code> <code>protype</code> <code>str</code> <p>\"taosc\" or \"restful\". Defaults to \"taosc\".</p> <code>'taosc'</code> <code>ns_tag</code> <code>_type_</code> <p>use ns. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <p>timestamp, datetime: timestamp and datetime</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.gen_tag_col_str","title":"<code>gen_tag_col_str(gen_type, data_type, count)</code>","text":"<p>gen multi tags or cols by gen_type</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.getLongName","title":"<code>getLongName(len, mode='mixed')</code>","text":"<p>generate long name mode could be numbers/letters/letters_mixed/mixed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.get_long_name","title":"<code>get_long_name(length=10, mode='letters')</code>","text":"<p>generate long name mode could be numbers/letters/letters_mixed/mixed</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.get_timestamp_n_days_later","title":"<code>get_timestamp_n_days_later(n=30)</code>","text":"<p>Get the timestamp of a date n days later from the current date.</p> <p>Parameters:</p> Name Type Description Default <code>n</code> <code>int</code> <p>Number of days to add to the current date. Default is 30.</p> <code>30</code> <p>Returns:</p> Name Type Description <code>int</code> <p>Timestamp of the date n days later, in milliseconds.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.pause_stream","title":"<code>pause_stream(stream_name, if_exist=True, if_not_exist=False)</code>","text":"<p>pause_stream</p> <p>Parameters:</p> Name Type Description Default <code>stream_name</code> <code>str</code> <p>stream_name</p> required <code>if_exist</code> <code>bool</code> <p>Defaults to True.</p> <code>True</code> <code>if_not_exist</code> <code>bool</code> <p>Defaults to False.</p> <code>False</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.prepare_data","title":"<code>prepare_data(interval=None, watermark=None, session=None, state_window=None, state_window_max=127, interation=3, range_count=None, precision='ms', fill_history_value=0, ext_stb=None, custom_col_index=None, col_value_type='random')</code>","text":"<p>prepare stream data</p> <p>Parameters:</p> Name Type Description Default <code>interval</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <code>watermark</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <code>session</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <code>state_window</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>state_window_max</code> <code>int</code> <p>Defaults to 127.</p> <code>127</code> <code>interation</code> <code>int</code> <p>Defaults to 3.</p> <code>3</code> <code>range_count</code> <code>int</code> <p>Defaults to None.</p> <code>None</code> <code>precision</code> <code>str</code> <p>Defaults to \"ms\".</p> <code>'ms'</code> <code>fill_history_value</code> <code>int</code> <p>Defaults to 0.</p> <code>0</code> <code>ext_stb</code> <code>bool</code> <p>Defaults to None.</p> <code>None</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.resume_stream","title":"<code>resume_stream(stream_name, if_exist=True, if_not_exist=False, ignore_untreated=False)</code>","text":"<p>resume_stream</p> <p>Parameters:</p> Name Type Description Default <code>stream_name</code> <code>str</code> <p>stream_name</p> required <code>if_exist</code> <code>bool</code> <p>Defaults to True.</p> <code>True</code> <code>if_not_exist</code> <code>bool</code> <p>Defaults to False.</p> <code>False</code> <code>ignore_untreated</code> <code>bool</code> <p>Defaults to False.</p> <code>False</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.round_handle","title":"<code>round_handle(input_list)</code>","text":"<p>round list elem</p> <p>Parameters:</p> Name Type Description Default <code>input_list</code> <code>list</code> <p>input value list</p> required <p>Returns:</p> Name Type Description <code>_type_</code> <p>round list</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.screateDb","title":"<code>screateDb(dbname='test', drop_db=True, **kwargs)</code>","text":"<p>create database</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to \"test\".</p> <code>'test'</code> <code>drop_db</code> <code>bool</code> <p>Defaults to True.</p> <code>True</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.screate_ctable","title":"<code>screate_ctable(dbname=None, stbname=None, ctbname='ctb', use_name='table', tag_elm_list=None, ts_value=None, count=1, default_varchar_datatype='letters', default_nchar_datatype='letters', default_ctbname_prefix='ctb', default_ctbname_index_start_num=1, **kwargs)</code>","text":"<p>summary</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>stbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>ctbname</code> <code>str</code> <p>Defaults to \"ctb\".</p> <code>'ctb'</code> <code>use_name</code> <code>str</code> <p>Defaults to \"table\".</p> <code>'table'</code> <code>tag_elm_list</code> <code>list</code> <p>use for sgen_tag_type_str(), Defaults to None.</p> <code>None</code> <code>ts_value</code> <code>timestamp</code> <p>Defaults to None.</p> <code>None</code> <code>count</code> <code>int</code> <p>ctb count, Defaults to 1.</p> <code>1</code> <code>default_varchar_datatype</code> <code>str</code> <p>Defaults to \"letters\".</p> <code>'letters'</code> <code>default_nchar_datatype</code> <code>str</code> <p>Defaults to \"letters\".</p> <code>'letters'</code> <code>default_ctbname_prefix</code> <code>str</code> <p>Defaults to \"ctb\".</p> <code>'ctb'</code> <code>default_ctbname_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.screate_stable","title":"<code>screate_stable(dbname=None, stbname='stb', use_name='table', column_elm_list=None, tag_elm_list=None, need_tagts=False, count=1, default_stbname_prefix='stb', default_stbname_index_start_num=1, default_column_index_start_num=1, default_tag_index_start_num=1, **kwargs)</code>","text":"<p>summary</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>stbname</code> <code>str</code> <p>Defaults to \"stb\".</p> <code>'stb'</code> <code>use_name</code> <code>str</code> <p>stable/table, Defaults to \"table\".</p> <code>'table'</code> <code>column_elm_list</code> <code>list</code> <p>use for sgen_column_type_str(), Defaults to None.</p> <code>None</code> <code>tag_elm_list</code> <code>list</code> <p>use for sgen_tag_type_str(), Defaults to None.</p> <code>None</code> <code>need_tagts</code> <code>bool</code> <p>tag use timestamp, Defaults to False.</p> <code>False</code> <code>count</code> <code>int</code> <p>stable count, Defaults to 1.</p> <code>1</code> <code>default_stbname_prefix</code> <code>str</code> <p>Defaults to \"stb\".</p> <code>'stb'</code> <code>default_stbname_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code> <code>default_column_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code> <code>default_tag_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.screate_table","title":"<code>screate_table(dbname=None, tbname='tb', use_name='table', column_elm_list=None, count=1, default_tbname_prefix='tb', default_tbname_index_start_num=1, default_column_index_start_num=1, **kwargs)</code>","text":"<p>create ctable</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>tbname</code> <code>str</code> <p>Defaults to \"tb\".</p> <code>'tb'</code> <code>use_name</code> <code>str</code> <p>Defaults to \"table\".</p> <code>'table'</code> <code>column_elm_list</code> <code>list</code> <p>Defaults to None.</p> <code>None</code> <code>count</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code> <code>default_tbname_prefix</code> <code>str</code> <p>Defaults to \"tb\".</p> <code>'tb'</code> <code>default_tbname_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code> <code>default_column_index_start_num</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.sdelete_rows","title":"<code>sdelete_rows(dbname=None, tbname=None, start_ts=None, end_ts=None, ts_key=None)</code>","text":"<p>delete rows</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>tbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>start_ts</code> <code>timestamp</code> <p>range start. Defaults to None.</p> <code>None</code> <code>end_ts</code> <code>timestamp</code> <p>range end. Defaults to None.</p> <code>None</code> <code>ts_key</code> <code>str</code> <p>timestamp column name. Defaults to None.</p> <code>None</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.sgen_column_type_str","title":"<code>sgen_column_type_str(column_elm_list)</code>","text":"<p>generage column type str</p> <p>Parameters:</p> Name Type Description Default <code>column_elm_list</code> <code>list</code> <p>column_elm_list</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.sgen_column_value_list","title":"<code>sgen_column_value_list(column_elm_list, need_null, ts_value=None, additional_ts=None, custom_col_index=None, col_value_type=None, force_pk_val=None)</code>","text":"<p>summary</p> <p>Parameters:</p> Name Type Description Default <code>column_elm_list</code> <code>list</code> <p>gen_random_type_value()</p> required <code>need_null</code> <code>bool</code> <p>if insert null</p> required <code>ts_value</code> <code>timestamp</code> <p>Defaults to None.</p> <code>None</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.sgen_tag_type_str","title":"<code>sgen_tag_type_str(tag_elm_list)</code>","text":"<p>generage tag type str</p> <p>Parameters:</p> Name Type Description Default <code>tag_elm_list</code> <code>list</code> <p>tag_elm_list</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.sgen_tag_value_list","title":"<code>sgen_tag_value_list(tag_elm_list, ts_value=None)</code>","text":"<p>generage tag value str</p> <p>Parameters:</p> Name Type Description Default <code>tag_elm_list</code> <code>list</code> <p>description</p> required <code>ts_value</code> <code>timestamp</code> <p>Defaults to None.</p> <code>None</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.sinsert_rows","title":"<code>sinsert_rows(dbname=None, tbname=None, column_ele_list=None, ts_value=None, count=1, need_null=False, custom_col_index=None, col_value_type='random')</code>","text":"<p>insert rows</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>tbname</code> <code>str</code> <p>Defaults to None.</p> <code>None</code> <code>column_ele_list</code> <code>list</code> <p>Defaults to None.</p> <code>None</code> <code>ts_value</code> <code>timestamp</code> <p>Defaults to None.</p> <code>None</code> <code>count</code> <code>int</code> <p>Defaults to 1.</p> <code>1</code> <code>need_null</code> <code>bool</code> <p>Defaults to False.</p> <code>False</code>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.str_ts_trans_bigint","title":"<code>str_ts_trans_bigint(str_ts)</code>","text":"<p>trans str ts to bigint</p> <p>Parameters:</p> Name Type Description Default <code>str_ts</code> <code>str</code> <p>human-date</p> required <p>Returns:</p> Name Type Description <code>bigint</code> <p>bigint-ts</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.time_cast","title":"<code>time_cast(time_value, split_symbol='+')</code>","text":"<p>cast bigint to timestamp</p> <p>Parameters:</p> Name Type Description Default <code>time_value</code> <code>bigint</code> <p>ts</p> required <code>split_symbol</code> <code>str</code> <p>split sympol. Defaults to \"+\".</p> <code>'+'</code> <p>Returns:</p> Name Type Description <code>_type_</code> <p>timestamp</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.trans_time_to_s","title":"<code>trans_time_to_s(runtime)</code>","text":"<p>trans time to s</p> <p>Parameters:</p> Name Type Description Default <code>runtime</code> <code>str</code> <p>1d/1h/1m...</p> required <p>Returns:</p> Name Type Description <code>int</code> <p>second</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.update_delete_history_data","title":"<code>update_delete_history_data(delete)</code>","text":"<p>update and delete history data</p> <p>Parameters:</p> Name Type Description Default <code>delete</code> <code>bool</code> <p>True/False</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#common.TDCom.update_json_file_replica","title":"<code>update_json_file_replica(json_file_path, new_replica_value, output_file_path=None)</code>","text":"<p>Read a JSON file, update the 'replica' value, and write the result back to a file.</p> <p>Parameters: json_file_path (str): The path to the original JSON file. new_replica_value (int): The new 'replica' value to be set. output_file_path (str, optional): The path to the output file where the updated JSON will be saved. If not provided, the original file will be overwritten.</p> <p>Returns: None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#constant","title":"<code>constant</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#eos","title":"<code>eos</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#epath","title":"<code>epath</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#etime","title":"<code>etime</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#etool","title":"<code>etool</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#etool.benchMark","title":"<code>benchMark(command='', json='')</code>","text":"<p>Run the <code>taosBenchmark</code> binary with a command or JSON file.</p> <p>Parameters:</p> Name Type Description Default <code>command</code> <code>str</code> <p>The command to execute. Defaults to an empty string.</p> <code>''</code> <code>json</code> <code>str</code> <p>The path to a JSON file for execution. Defaults to an empty string.</p> <code>''</code> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the execution of the JSON file fails.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#etool.benchMarkFile","title":"<code>benchMarkFile()</code>","text":"<p>Get the path to the <code>taosBenchmark</code> binary file.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>The full path to the <code>taosBenchmark</code> binary file, with <code>.exe</code> appended if on Windows.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#etool.curFile","title":"<code>curFile(fullPath, filename)</code>","text":"<p>Get the full path to a file in the current directory.</p> <p>Parameters:</p> Name Type Description Default <code>fullPath</code> <code>str</code> <p>The full path to the current directory.</p> required <code>filename</code> <code>str</code> <p>The name of the file.</p> required <p>Returns:</p> Name Type Description <code>str</code> <p>The full path to the file in the current directory.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#etool.exeBinFile","title":"<code>exeBinFile(fname, command, wait=True, show=True)</code>","text":"<p>Execute a binary file with the specified command.</p> <p>This method uses <code>utils.army.frame.eos.exe</code> or <code>utils.army.frame.eos.exeNoWait</code>  to execute the binary file. The <code>exe</code> function waits for the command to finish,  while <code>exeNoWait</code> runs the command in the background and returns immediately.</p> <p>Parameters:</p> Name Type Description Default <code>fname</code> <code>str</code> <p>The name of the binary file.</p> required <code>command</code> <code>str</code> <p>The command to execute.</p> required <code>wait</code> <code>bool</code> <p>Whether to wait for the command to finish. Defaults to True. - If True, uses <code>utils.army.frame.eos.exe</code>. - If False, uses <code>utils.army.frame.eos.exeNoWait</code>.</p> <code>True</code> <code>show</code> <code>bool</code> <p>Whether to log the command. Defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>int</code> <p>The exit status of the command execution. A return value of <code>0</code> indicates success,   while a non-zero value indicates failure.  - If <code>wait</code> is False, the return value is the exit status of the <code>nohup</code> or <code>mintty</code> command.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#etool.runBinFile","title":"<code>runBinFile(fname, command, show=True)</code>","text":"<p>Run a binary file with the specified command.</p> <p>Parameters:</p> Name Type Description Default <code>fname</code> <code>str</code> <p>The name of the binary file.</p> required <code>command</code> <code>str</code> <p>The command to execute.</p> required <code>show</code> <code>bool</code> <p>Whether to log the command. Defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>list</code> <p>The output of the command as a list of strings.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#etool.taosAdapterFile","title":"<code>taosAdapterFile()</code>","text":"<p>Get the path to the <code>taosAdapter</code> binary file.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>The full path to the <code>taosAdapter</code> binary file, with <code>.exe</code> appended if on Windows.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#etool.taosDumpFile","title":"<code>taosDumpFile()</code>","text":"<p>Get the path to the <code>taosdump</code> binary file.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>The full path to the <code>taosdump</code> binary file, with <code>.exe</code> appended if on Windows.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#eutil","title":"<code>eutil</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#gettime","title":"<code>gettime</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#log","title":"<code>log</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#pathFinding","title":"<code>pathFinding</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#pathFinding.TDFindPath","title":"<code>TDFindPath</code>","text":"<p>This class is for finding path within TDengine</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#pathFinding.TDFindPath.getTDenginePath","title":"<code>getTDenginePath()</code>","text":"<p>for finding the root path of TDengine</p> <p>Returns:</p> Name Type Description <code>str</code> <p>the root path of TDengine</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#pathFinding.TDFindPath.getTaosdemoPath","title":"<code>getTaosdemoPath()</code>","text":"<p>for finding the path of directory containing taosdemo</p> <p>Returns:</p> Name Type Description <code>str</code> <p>the path to directory containing taosdemo</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#pathFinding.TDFindPath.init","title":"<code>init(file)</code>","text":"<p>[summary]</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>str</code> <p>the file location you want to start the query. Generally using file</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#sql","title":"<code>sql</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql","title":"<code>TDSql</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkAffectedRows","title":"<code>checkAffectedRows(expectAffectedRows)</code>","text":"<p>Checks if the number of affected rows from the last executed SQL statement matches the expected number of affected rows.</p> <p>Parameters:</p> Name Type Description Default <code>expectAffectedRows</code> <code>int</code> <p>The expected number of affected rows.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the number of affected rows does not match the expected number.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkAgg","title":"<code>checkAgg(sql, expectCnt)</code>","text":"<p>Executes an aggregate SQL query and checks if the result matches the expected count.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The aggregate SQL query to be executed.</p> required <code>expectCnt</code> <code>int</code> <p>The expected count from the aggregate query.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p> <code>SystemExit</code> <p>If the result of the aggregate query does not match the expected count.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkColNameList","title":"<code>checkColNameList(col_name_list, expect_col_name_list)</code>","text":"<p>Checks if the column names from the last query match the expected column names.</p> <p>Parameters:</p> Name Type Description Default <code>col_name_list</code> <code>list</code> <p>The list of column names from the last query.</p> required <code>expect_col_name_list</code> <code>list</code> <p>The list of expected column names.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the column names do not match the expected column names.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkCols","title":"<code>checkCols(expectCols)</code>","text":"<p>Checks if the number of columns fetched by the last query matches the expected number of columns.</p> <p>Parameters:</p> Name Type Description Default <code>expectCols</code> <code>int</code> <p>The expected number of columns.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the number of columns does not match the expected number.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkData","title":"<code>checkData(row, col, data, show=False)</code>","text":"<p>Checks if the data at the specified row and column matches the expected data.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index of the data to be checked.</p> required <code>col</code> <code>int</code> <p>The column index of the data to be checked.</p> required <code>data</code> <p>The expected data to be compared with.</p> required <code>show</code> <code>bool</code> <p>If True, logs a message when the check is successful. Defaults to False.</p> <code>False</code> <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the data at the specified row and column does not match the expected data.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkDataCsv","title":"<code>checkDataCsv(sql, csvfilePath)</code>","text":"<p>Executes a SQL query and checks if the result matches the expected data from a CSV file.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>csvfilePath</code> <code>str</code> <p>The path to the CSV file containing the expected data.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the CSV file path is invalid, the file is not found, there is an error reading the file, or if the sql result does not match the expected data from CSV file.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkDataCsvByLine","title":"<code>checkDataCsvByLine(sql, csvfilePath)</code>","text":"<p>Executes a SQL query and checks if the result matches the expected data from a CSV file line by line.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>csvfilePath</code> <code>str</code> <p>The path to the CSV file containing the expected data.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the CSV file path is invalid, the file is not found, there is an error reading the file,         or if the SQL result does not match the expected data from the CSV file.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkDataLoop","title":"<code>checkDataLoop(row, col, data, sql, loopCount, waitTime)</code>","text":"<p>Executes a SQL query in a loop and checks if the data at the specified row and column matches the expected data.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index of the data to be checked.</p> required <code>col</code> <code>int</code> <p>The column index of the data to be checked.</p> required <code>data</code> <p>The expected data to be compared with.</p> required <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>loopCount</code> <code>int</code> <p>The number of times to execute the SQL query.</p> required <code>waitTime</code> <code>int</code> <p>The time to wait (in seconds) between each execution.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p> <code>SystemExit</code> <p>If the data at the specified row and column does not match the expected data.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkDataMem","title":"<code>checkDataMem(sql, mem)</code>","text":"<p>Executes a SQL query and checks if the result matches the expected data.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>mem</code> <code>list</code> <p>The expected data, represented as a list of lists.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the expected data is not a list of lists, or if the SQL result does not match the expected data.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkDataMemByLine","title":"<code>checkDataMemByLine(sql, mem)</code>","text":"<p>Executes a SQL query and checks if the result matches the expected data (Same as checkDataMem).</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>mem</code> <code>list</code> <p>The expected data, represented as a list of lists.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the expected data is not a list of lists, or if the SQL result does not match the expected data.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkDataNoExist","title":"<code>checkDataNoExist(row, col, data)</code>","text":"<p>Checks if the data at the specified row and column matches the expected data without exiting the program.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index of the data to be checked.</p> required <code>col</code> <code>int</code> <p>The column index of the data to be checked.</p> required <code>data</code> <p>The expected data to be compared with.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the data matches the expected data, otherwise False.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkDataType","title":"<code>checkDataType(row, col, dataType)</code>","text":"<p>Checks if the data type at the specified row and column matches the expected data type.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index of the data to be checked.</p> required <code>col</code> <code>int</code> <p>The column index of the data to be checked.</p> required <code>dataType</code> <code>str</code> <p>The expected data type.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the data type matches the expected data type, otherwise False.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the specified row or column index is out of range.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkEqual","title":"<code>checkEqual(elm, expect_elm)</code>","text":"<p>Checks if the given element is equal to the expected element.</p> <p>Parameters:</p> Name Type Description Default <code>elm</code> <p>The element to be checked.</p> required <code>expect_elm</code> <p>The expected element to be compared with.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the element does not match the expected element.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkFirstValue","title":"<code>checkFirstValue(sql, expect)</code>","text":"<p>Executes a SQL query and checks if the first value in the result matches the expected value.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>expect</code> <p>The expected value of the first result.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p> <code>SystemExit</code> <p>If the first value in the result does not match the expected value.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkNotEqual","title":"<code>checkNotEqual(elm, expect_elm)</code>","text":"<p>Checks if the given element is not equal to the expected element.</p> <p>Parameters:</p> Name Type Description Default <code>elm</code> <p>The element to be checked.</p> required <code>expect_elm</code> <p>The expected element to be compared with.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the element matches the expected element.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkRowCol","title":"<code>checkRowCol(row, col)</code>","text":"<p>Checks if the specified row and column indices are within the range of the last query result.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index to be checked.</p> required <code>col</code> <code>int</code> <p>The column index to be checked.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the specified row or column index is out of range.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkRowColNoExist","title":"<code>checkRowColNoExist(row, col)</code>","text":"<p>Checks if the specified row and column indices are within the range of the last query result without exiting the program.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index to be checked.</p> required <code>col</code> <code>int</code> <p>The column index to be checked.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the specified row and column indices are within the range, otherwise False.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkRows","title":"<code>checkRows(expectedRows)</code>","text":"<p>Checks if the number of rows fetched by the last query matches the expected number of rows.</p> <p>Parameters:</p> Name Type Description Default <code>expectedRows</code> <code>int</code> <p>The expected number of rows.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the number of rows matches the expected number, otherwise it exits the program.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the number of rows does not match the expected number.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkRows_not_exited","title":"<code>checkRows_not_exited(expectedRows)</code>","text":"<pre><code>Check if the query rows is equal to the expected rows\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>expectedRows</code> <p>The expected number of rows.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>Returns True if the actual number of rows matches the expected number, otherwise returns False.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkRows_range","title":"<code>checkRows_range(excepte_row_list)</code>","text":"<p>Checks if the number of rows fetched by the last query is within the expected range.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>excepte_row_list</code> <code>list</code> <p>A list of expected row counts.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the number of rows is within the expected range, otherwise it exits the program.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the number of rows is not within the expected range.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.checkSameColumn","title":"<code>checkSameColumn(c1, c2)</code>","text":"<p>Checks if the values in two specified columns are the same for all rows in the last query result.</p> <p>Parameters:</p> Name Type Description Default <code>c1</code> <code>int</code> <p>The index of the first column to be checked.</p> required <code>c2</code> <code>int</code> <p>The index of the second column to be checked.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the values in the specified columns are not the same for any row.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.close","title":"<code>close()</code>","text":"<p>Closes the cursor.</p> <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.error","title":"<code>error(sql, expectedErrno=None, expectErrInfo=None, fullMatched=True, show=False)</code>","text":"<p>Executes a SQL statement and checks for expected errors.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL statement to be executed.</p> required <code>expectedErrno</code> <code>int</code> <p>The expected error number. Defaults to None.</p> <code>None</code> <code>expectErrInfo</code> <code>str</code> <p>The expected error information. Defaults to None.</p> <code>None</code> <code>fullMatched</code> <code>bool</code> <p>If True, checks for exact matches of the expected error information. Defaults to True.</p> <code>True</code> <code>show</code> <code>bool</code> <p>If True, the SQL statement will be logged before execution. Defaults to False.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>str</code> <p>The error information if an error occurs.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the expected error does not occur or if the error information does not match the expected information.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.errors","title":"<code>errors(sql_list, expected_error_id_list=None, expected_error_info_list=None)</code>","text":"<p>Executes a list of SQL queries and checks for expected errors.</p> <p>Parameters:</p> Name Type Description Default <code>sql_list</code> <code>list</code> <p>The list of SQL queries to be executed.</p> required <code>expected_error_id_list</code> <code>list</code> <p>The list of expected error numbers corresponding to each SQL query. Defaults to None.</p> <code>None</code> <code>expected_error_info_list</code> <code>list</code> <p>The list of expected error information corresponding to each SQL query. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the SQL list is empty, if the execution of any SQL query fails, if the expected error does not occur, or if the error information does not match the expected information.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.execute","title":"<code>execute(sql, queryTimes=10, show=False)</code>","text":"<p>Executes a SQL statement.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL statement to be executed.</p> required <code>queryTimes</code> <code>int</code> <p>The number of times to attempt the execution in case of failure. Defaults to 10.</p> <code>10</code> <code>show</code> <code>bool</code> <p>If True, the SQL statement will be logged before execution. Defaults to False.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>int</code> <p>The number of affected rows.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the execution fails after the specified number of attempts.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.executeTimes","title":"<code>executeTimes(sql, times)</code>","text":"<p>Executes a SQL statement a specified number of times.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL statement to be executed.</p> required <code>times</code> <code>int</code> <p>The number of times to execute the SQL statement.</p> required <p>Returns:</p> Name Type Description <code>int</code> <p>The number of affected rows from the last execution.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.executes","title":"<code>executes(sqls, queryTimes=30, show=False)</code>","text":"<p>Executes a list of SQL statements.</p> <p>Parameters:</p> Name Type Description Default <code>sqls</code> <code>list</code> <p>The list of SQL statements to be executed.</p> required <code>queryTimes</code> <code>int</code> <p>The number of times to attempt the execution in case of failure. Defaults to 30.</p> <code>30</code> <code>show</code> <code>bool</code> <p>If True, each SQL statement will be logged before execution. Defaults to False.</p> <code>False</code> <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the execution of any SQL statement fails after the specified number of attempts.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.getColData","title":"<code>getColData(col)</code>","text":"<p>Retrieves all data from the specified column in the last query result.</p> <p>Parameters:</p> Name Type Description Default <code>col</code> <code>int</code> <p>The column index of the data to be retrieved.</p> required <p>Returns:</p> Name Type Description <code>list</code> <p>A list containing all data from the specified column.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.getColNameList","title":"<code>getColNameList(sql, col_tag=None)</code>","text":"<p>Executes a SQL query and retrieves the column names and optionally the column types.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>col_tag</code> <code>optional</code> <p>If provided, the method will return both column names and column types. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>list</code> <p>A list containing the column names.</p> <code>tuple</code> <p>A tuple containing two lists - the column names and the column types, if col_tag is provided.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.getData","title":"<code>getData(row, col)</code>","text":"<p>Retrieves the data at the specified row and column from the last query result.</p> <p>Parameters:</p> Name Type Description Default <code>row</code> <code>int</code> <p>The row index of the data to be retrieved.</p> required <code>col</code> <code>int</code> <p>The column index of the data to be retrieved.</p> required <p>Returns:</p> Type Description <p>The data at the specified row and column.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the specified row or column is out of range.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.getFirstValue","title":"<code>getFirstValue(sql)</code>","text":"<p>Executes a SQL query and retrieves the first value in the result.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <p>Returns:</p> Type Description <p>The first value in the result.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.getResult","title":"<code>getResult(sql)</code>","text":"<p>Executes a SQL query and fetches the results.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <p>Returns:</p> Name Type Description <code>list</code> <p>The fetched results.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.getRows","title":"<code>getRows()</code>","text":"<p>Retrieves the number of rows fetched by the last query.</p> <p>Returns:</p> Name Type Description <code>int</code> <p>The number of rows fetched by the last query.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.getVariable","title":"<code>getVariable(search_attr)</code>","text":"<p>Retrieves the value of a specified variable from the database.</p> <p>Parameters:</p> Name Type Description Default <code>search_attr</code> <code>str</code> <p>The name of the variable to be retrieved.</p> required <p>Returns:</p> Name Type Description <code>tuple</code> <p>A tuple containing the value of the specified variable and the list of all variables.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.get_times","title":"<code>get_times(time_str, precision='ms')</code>","text":"<p>Converts a time string to a timestamp based on the specified precision.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>time_str</code> <code>str</code> <p>The time string to be converted. The string should end with a character indicating the time unit (e.g., 's' for seconds, 'm' for minutes).</p> required <code>precision</code> <code>str</code> <p>The precision of the timestamp. Can be \"ms\" (milliseconds), \"us\" (microseconds), or \"ns\" (nanoseconds). Defaults to \"ms\".</p> <code>'ms'</code> <p>Returns:</p> Name Type Description <code>int</code> <p>The timestamp in the specified precision.</p> <p>Raises:</p> Type Description <code>SystemExit</code> <p>If the time string does not end with a valid time unit character or if the precision is not valid.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.get_type","title":"<code>get_type(col)</code>","text":"<p>Retrieves the data type of the specified column in the last query result.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>col</code> <code>int</code> <p>The column index for which the data type is to be retrieved.</p> required <p>Returns:</p> Name Type Description <code>str</code> <p>The data type of the specified column.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.init","title":"<code>init(cursor, log=False)</code>","text":"<p>Initializes the TDSql instance with a database cursor and optionally enables logging.</p> <p>Parameters:</p> Name Type Description Default <code>cursor</code> <p>The database cursor to be used for executing SQL queries.</p> required <code>log</code> <code>bool</code> <p>If True, enables logging of SQL statements to a file. Defaults to False.</p> <code>False</code> <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.is_err_sql","title":"<code>is_err_sql(sql)</code>","text":"<p>Executes a SQL statement and checks if it results in an error.(Not used)</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL statement to be executed.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the SQL statement results in an error, False otherwise.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.prepare","title":"<code>prepare(dbname='db', drop=True, **kwargs)</code>","text":"<p>Prepares the database by optionally dropping it if it exists, creating it, and setting it as the active database.</p> <p>Parameters:</p> Name Type Description Default <code>dbname</code> <code>str</code> <p>The name of the database to be prepared. Defaults to \"db\".</p> <code>'db'</code> <code>drop</code> <code>bool</code> <p>If True, drops the database if it exists before creating it. Defaults to True.</p> <code>True</code> <code>**kwargs</code> <p>Additional keyword arguments to be included in the database creation statement. If duration is not provided, it defaults to 100.</p> <code>{}</code> <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.query","title":"<code>query(sql, row_tag=None, queryTimes=10, count_expected_res=None, show=False)</code>","text":"<p>Executes a SQL query and fetches the results.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>row_tag</code> <code>optional</code> <p>If provided, the method will return the fetched results. Defaults to None.</p> <code>None</code> <code>queryTimes</code> <code>int</code> <p>The number of times to attempt the query in case of failure. Defaults to 10.</p> <code>10</code> <code>count_expected_res</code> <code>optional</code> <p>If provided, the method will repeatedly execute the query until the first result matches this value or the queryTimes limit is reached. Defaults to None.</p> <code>None</code> <code>show</code> <code>bool</code> <p>If True, the SQL statement will be logged before execution. Defaults to False.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>int</code> <p>The number of rows fetched if row_tag is not provided.</p> <code>list</code> <p>The fetched results if row_tag is provided.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query fails after the specified number of attempts.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.queryAndCheckResult","title":"<code>queryAndCheckResult(sql_list, expect_result_list)</code>","text":"<p>Executes a list of SQL queries and checks the results against the expected results.</p> <p>Parameters:</p> Name Type Description Default <code>sql_list</code> <code>list</code> <p>The list of SQL queries to be executed.</p> required <code>expect_result_list</code> <code>list</code> <p>The list of expected results corresponding to each SQL query.</p> required <p>Returns:</p> Type Description <p>None</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the execution of any SQL query fails or if the results do not match the expected results.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sql.TDSql.waitedQuery","title":"<code>waitedQuery(sql, expectedRows, timeout)</code>","text":"<p>Executes a SQL query and waits until the expected number of rows is retrieved or the timeout is reached.</p> <p>Parameters:</p> Name Type Description Default <code>sql</code> <code>str</code> <p>The SQL query to be executed.</p> required <code>expectedRows</code> <code>int</code> <p>The expected number of rows to be retrieved.</p> required <code>timeout</code> <code>int</code> <p>The maximum time to wait (in seconds) for the expected number of rows to be retrieved.</p> required <p>Returns:</p> Name Type Description <code>tuple</code> <p>A tuple containing the number of rows retrieved and the time taken (in seconds).</p> <p>Raises:</p> Type Description <code>Exception</code> <p>If the query execution fails.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sqlset","title":"<code>sqlset</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#srvCtl","title":"<code>srvCtl</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#srvCtl.srvCtl","title":"<code>srvCtl</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#srvCtl.srvCtl.clusterRootPath","title":"<code>clusterRootPath()</code>","text":"<p>Gets the root path of the cluster.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>The root path of the cluster.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#srvCtl.srvCtl.dnodeCfgPath","title":"<code>dnodeCfgPath(idx)</code>","text":"<p>Gets the configuration path for a specific dnode.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the dnode.</p> required <p>Returns:</p> Name Type Description <code>str</code> <p>The configuration path for the dnode.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#srvCtl.srvCtl.dnodeDataFiles","title":"<code>dnodeDataFiles(idx)</code>","text":"<p>Gets the data files for a specific dnode.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the dnode.</p> required <p>Returns:</p> Name Type Description <code>list</code> <p>A list of data files for the dnode.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#srvCtl.srvCtl.dnodeStart","title":"<code>dnodeStart(idx)</code>","text":"<p>Starts a dnode.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the dnode to start.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the dnode was started successfully, False otherwise.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#srvCtl.srvCtl.dnodeStop","title":"<code>dnodeStop(idx)</code>","text":"<p>Stops a dnode.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the dnode to stop.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <p>True if the dnode was stopped successfully, False otherwise.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#srvCtl.srvCtl.dnodeStopAll","title":"<code>dnodeStopAll()</code>","text":"<p>Stops all dnodes.</p> <p>Returns:</p> Name Type Description <code>bool</code> <p>True if all dnodes were stopped successfully, False otherwise.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#srvCtl.srvCtl.taosdFile","title":"<code>taosdFile(idx)</code>","text":"<p>Gets the path to the taosd file for a specific dnode.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>The index of the dnode.</p> required <p>Returns:</p> Name Type Description <code>str</code> <p>The path to the taosd file.</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#sub","title":"<code>sub</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#taosadapter","title":"<code>taosadapter</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#taosadapter.TAdapter","title":"<code>TAdapter</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#taosadapter.TAdapter.start_taosadapter","title":"<code>start_taosadapter()</code>","text":"<p>use this method, must deploy taosadapter</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#taosdemoCfg","title":"<code>taosdemoCfg</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#taosdemoCfg.TDTaosdemoCfg","title":"<code>TDTaosdemoCfg</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#taosdemoCfg.TDTaosdemoCfg.append_sql_stb","title":"<code>append_sql_stb(target, value)</code>","text":"<p>for appending sql dict into specific sql list</p> <p>Parameters:</p> Name Type Description Default <code>target</code> <code>str</code> <p>the target append list format: 'fileType_tableType' fileType: query, sub tableType: table, stable unique: 'insert_stbs'</p> required <code>value</code> <code>dict</code> <p>the sql dict going to be appended</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#taosdemoCfg.TDTaosdemoCfg.get_sql","title":"<code>get_sql(target)</code>","text":"<p>general get function for all sql lists</p> <p>Parameters:</p> Name Type Description Default <code>target</code> <code>str</code> <p>the sql list want to get format: 'fileType_tableType' fileType: query, sub tableType: table, stable unique: 'insert_stbs'</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#taosdemoCfg.TDTaosdemoCfg.get_template","title":"<code>get_template(target)</code>","text":"<p>general get function for the default sql template</p> <p>Parameters:</p> Name Type Description Default <code>target</code> <code>str</code> <p>the sql list want to get format: 'fileType_tableType' fileType: query, sub tableType: table, stable unique: 'insert_stbs'</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#taosdemoCfg.TDTaosdemoCfg.import_sql","title":"<code>import_sql(Sql_in, mode)</code>","text":"<p>used for importing the sql later used</p> <p>Parameters:</p> Name Type Description Default <code>Sql_in</code> <code>dict</code> <p>the imported sql dict</p> required <code>mode</code> <code>str</code> <p>the sql storing location within TDTaosdemoCfg format: 'fileType_tableType' fileType: query, sub tableType: table, stable</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#taosdemoCfg.TDTaosdemoCfg.pop_sql_stb","title":"<code>pop_sql_stb(target, index)</code>","text":"<p>for poping a sql dict from specific sql list</p> <p>Parameters:</p> Name Type Description Default <code>target</code> <code>str</code> <p>the target append list format: 'fileType_tableType' fileType: query, sub tableType: table, stable unique: 'insert_stbs'</p> required <code>index</code> <code>int</code> <p>the sql dict that is going to be popped</p> required"},{"location":"util_funcs_docs/new_test_framework/utils/#taoskeeper","title":"<code>taoskeeper</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#taoskeeper.TaosKeeper","title":"<code>TaosKeeper</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#taoskeeper.TaosKeeper.cfg","title":"<code>cfg(option, value)</code>","text":"<p>add param option and value to cfg file</p> <p>Parameters:</p> Name Type Description Default <code>option</code> <p>str, param name</p> required <code>value</code> <p>str, param value</p> required <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#taoskeeper.TaosKeeper.start","title":"<code>start()</code>","text":"<p>start taoskeeper process.</p> <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#taoskeeper.TaosKeeper.stop","title":"<code>stop(force_kill=False)</code>","text":"<p>stop taoskeeper process.</p> <p>Parameters:</p> Name Type Description Default <code>force_kill</code> <p>bool, whether to force kill the process default: False if True, use kill -9 if False, use kill -15</p> <code>False</code> <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#taoskeeper.TaosKeeper.update_cfg","title":"<code>update_cfg(update_dict)</code>","text":"<p>update taoskeeper cfg file</p> <p>Parameters:</p> Name Type Description Default <code>update_dict</code> <code>dict</code> <p>dict, update dict example: {\"log\": {\"path\": \"/var/log/taos\"}}</p> required <p>Returns:</p> Type Description <p>None</p>"},{"location":"util_funcs_docs/new_test_framework/utils/#tserror","title":"<code>tserror</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#types","title":"<code>types</code>","text":""},{"location":"util_funcs_docs/new_test_framework/utils/#types.TDSmlProtocolType","title":"<code>TDSmlProtocolType</code>","text":"<p>Schemaless Protocol types 0 - unknown 1 - InfluxDB Line Protocol 2 - OpenTSDB Telnet Protocl 3 - OpenTSDB JSON Protocol</p>"}]}